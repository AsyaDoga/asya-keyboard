   1               		.file	"action_layer.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.default_layer_debug,"ax",@progbits
  11               	.global	default_layer_debug
  13               	default_layer_debug:
  14               	.LFB5:
  15               		.file 1 "./tmk_core/common/action_layer.c"
   1:./tmk_core/common/action_layer.c **** #include <stdint.h>
   2:./tmk_core/common/action_layer.c **** #include "keyboard.h"
   3:./tmk_core/common/action_layer.c **** #include "action.h"
   4:./tmk_core/common/action_layer.c **** #include "util.h"
   5:./tmk_core/common/action_layer.c **** #include "action_layer.h"
   6:./tmk_core/common/action_layer.c **** 
   7:./tmk_core/common/action_layer.c **** #ifdef DEBUG_ACTION
   8:./tmk_core/common/action_layer.c **** #include "debug.h"
   9:./tmk_core/common/action_layer.c **** #else
  10:./tmk_core/common/action_layer.c **** #include "nodebug.h"
  11:./tmk_core/common/action_layer.c **** #endif
  12:./tmk_core/common/action_layer.c **** 
  13:./tmk_core/common/action_layer.c **** 
  14:./tmk_core/common/action_layer.c **** /*
  15:./tmk_core/common/action_layer.c ****  * Default Layer State
  16:./tmk_core/common/action_layer.c ****  */
  17:./tmk_core/common/action_layer.c **** uint32_t default_layer_state = 0;
  18:./tmk_core/common/action_layer.c **** 
  19:./tmk_core/common/action_layer.c **** static void default_layer_state_set(uint32_t state)
  20:./tmk_core/common/action_layer.c **** {
  21:./tmk_core/common/action_layer.c ****     debug("default_layer_state: ");
  22:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug(" to ");
  23:./tmk_core/common/action_layer.c ****     default_layer_state = state;
  24:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
  25:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
  26:./tmk_core/common/action_layer.c **** }
  27:./tmk_core/common/action_layer.c **** 
  28:./tmk_core/common/action_layer.c **** void default_layer_debug(void)
  29:./tmk_core/common/action_layer.c **** {
  16               		.loc 1 29 1 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  30:./tmk_core/common/action_layer.c ****     dprintf("%08lX(%u)", default_layer_state, biton32(default_layer_state));
  22               		.loc 1 30 76 view .LVU1
  23               	/* epilogue start */
  31:./tmk_core/common/action_layer.c **** }
  24               		.loc 1 31 1 is_stmt 0 view .LVU2
  25 0000 0895      		ret
  26               		.cfi_endproc
  27               	.LFE5:
  29               		.section	.text.default_layer_set,"ax",@progbits
  30               	.global	default_layer_set
  32               	default_layer_set:
  33               	.LVL0:
  34               	.LFB6:
  32:./tmk_core/common/action_layer.c **** 
  33:./tmk_core/common/action_layer.c **** void default_layer_set(uint32_t state)
  34:./tmk_core/common/action_layer.c **** {
  35               		.loc 1 34 1 is_stmt 1 view -0
  36               		.cfi_startproc
  37               	/* prologue: function */
  38               	/* frame size = 0 */
  39               	/* stack size = 0 */
  40               	.L__stack_usage = 0
  35:./tmk_core/common/action_layer.c ****     default_layer_state_set(state);
  41               		.loc 1 35 5 view .LVU4
  42               	.LBB4:
  43               	.LBI4:
  19:./tmk_core/common/action_layer.c **** {
  44               		.loc 1 19 13 view .LVU5
  45               	.LBB5:
  21:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug(" to ");
  46               		.loc 1 21 35 view .LVU6
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
  47               		.loc 1 22 5 view .LVU7
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
  48               		.loc 1 22 41 view .LVU8
  23:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
  49               		.loc 1 23 5 view .LVU9
  23:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
  50               		.loc 1 23 25 is_stmt 0 view .LVU10
  51 0000 6093 0000 		sts default_layer_state,r22
  52 0004 7093 0000 		sts default_layer_state+1,r23
  53 0008 8093 0000 		sts default_layer_state+2,r24
  54 000c 9093 0000 		sts default_layer_state+3,r25
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
  55               		.loc 1 24 5 is_stmt 1 view .LVU11
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
  56               		.loc 1 24 39 view .LVU12
  25:./tmk_core/common/action_layer.c **** }
  57               		.loc 1 25 5 view .LVU13
  58 0010 0C94 0000 		jmp clear_keyboard_but_mods
  59               	.LVL1:
  25:./tmk_core/common/action_layer.c **** }
  60               		.loc 1 25 5 is_stmt 0 view .LVU14
  61               	.LBE5:
  62               	.LBE4:
  63               		.cfi_endproc
  64               	.LFE6:
  66               		.section	.text.default_layer_or,"ax",@progbits
  67               	.global	default_layer_or
  69               	default_layer_or:
  70               	.LVL2:
  71               	.LFB7:
  36:./tmk_core/common/action_layer.c **** }
  37:./tmk_core/common/action_layer.c **** 
  38:./tmk_core/common/action_layer.c **** #ifndef NO_ACTION_LAYER
  39:./tmk_core/common/action_layer.c **** void default_layer_or(uint32_t state)
  40:./tmk_core/common/action_layer.c **** {
  72               		.loc 1 40 1 is_stmt 1 view -0
  73               		.cfi_startproc
  74               		.loc 1 40 1 is_stmt 0 view .LVU16
  75 0000 0F93      		push r16
  76               	.LCFI0:
  77               		.cfi_def_cfa_offset 3
  78               		.cfi_offset 16, -2
  79 0002 1F93      		push r17
  80               	.LCFI1:
  81               		.cfi_def_cfa_offset 4
  82               		.cfi_offset 17, -3
  83               	/* prologue: function */
  84               	/* frame size = 0 */
  85               	/* stack size = 2 */
  86               	.L__stack_usage = 2
  41:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state | state);
  87               		.loc 1 41 5 is_stmt 1 view .LVU17
  88               	.LVL3:
  89               	.LBB8:
  90               	.LBI8:
  19:./tmk_core/common/action_layer.c **** {
  91               		.loc 1 19 13 view .LVU18
  92               	.LBB9:
  21:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug(" to ");
  93               		.loc 1 21 35 view .LVU19
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
  94               		.loc 1 22 5 view .LVU20
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
  95               		.loc 1 22 41 view .LVU21
  23:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
  96               		.loc 1 23 5 view .LVU22
  97               	.LBE9:
  98               	.LBE8:
  99               		.loc 1 41 5 is_stmt 0 view .LVU23
 100 0004 0091 0000 		lds r16,default_layer_state
 101 0008 1091 0000 		lds r17,default_layer_state+1
 102 000c 2091 0000 		lds r18,default_layer_state+2
 103 0010 3091 0000 		lds r19,default_layer_state+3
 104 0014 DC01      		movw r26,r24
 105 0016 CB01      		movw r24,r22
 106 0018 802B      		or r24,r16
 107 001a 912B      		or r25,r17
 108 001c A22B      		or r26,r18
 109 001e B32B      		or r27,r19
 110               	.LBB12:
 111               	.LBB10:
  23:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
 112               		.loc 1 23 25 view .LVU24
 113 0020 8093 0000 		sts default_layer_state,r24
 114 0024 9093 0000 		sts default_layer_state+1,r25
 115 0028 A093 0000 		sts default_layer_state+2,r26
 116 002c B093 0000 		sts default_layer_state+3,r27
 117               	.LVL4:
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 118               		.loc 1 24 5 is_stmt 1 view .LVU25
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 119               		.loc 1 24 39 view .LVU26
  25:./tmk_core/common/action_layer.c **** }
 120               		.loc 1 25 5 view .LVU27
 121               	/* epilogue start */
 122               	.LBE10:
 123               	.LBE12:
  42:./tmk_core/common/action_layer.c **** }
 124               		.loc 1 42 1 is_stmt 0 view .LVU28
 125 0030 1F91      		pop r17
 126 0032 0F91      		pop r16
 127               	.LVL5:
 128               	.LBB13:
 129               	.LBB11:
  25:./tmk_core/common/action_layer.c **** }
 130               		.loc 1 25 5 view .LVU29
 131 0034 0C94 0000 		jmp clear_keyboard_but_mods
 132               	.LVL6:
  25:./tmk_core/common/action_layer.c **** }
 133               		.loc 1 25 5 view .LVU30
 134               	.LBE11:
 135               	.LBE13:
 136               		.cfi_endproc
 137               	.LFE7:
 139               		.section	.text.default_layer_and,"ax",@progbits
 140               	.global	default_layer_and
 142               	default_layer_and:
 143               	.LVL7:
 144               	.LFB8:
  43:./tmk_core/common/action_layer.c **** void default_layer_and(uint32_t state)
  44:./tmk_core/common/action_layer.c **** {
 145               		.loc 1 44 1 is_stmt 1 view -0
 146               		.cfi_startproc
 147               		.loc 1 44 1 is_stmt 0 view .LVU32
 148 0000 0F93      		push r16
 149               	.LCFI2:
 150               		.cfi_def_cfa_offset 3
 151               		.cfi_offset 16, -2
 152 0002 1F93      		push r17
 153               	.LCFI3:
 154               		.cfi_def_cfa_offset 4
 155               		.cfi_offset 17, -3
 156               	/* prologue: function */
 157               	/* frame size = 0 */
 158               	/* stack size = 2 */
 159               	.L__stack_usage = 2
  45:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state & state);
 160               		.loc 1 45 5 is_stmt 1 view .LVU33
 161               	.LVL8:
 162               	.LBB16:
 163               	.LBI16:
  19:./tmk_core/common/action_layer.c **** {
 164               		.loc 1 19 13 view .LVU34
 165               	.LBB17:
  21:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug(" to ");
 166               		.loc 1 21 35 view .LVU35
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
 167               		.loc 1 22 5 view .LVU36
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
 168               		.loc 1 22 41 view .LVU37
  23:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
 169               		.loc 1 23 5 view .LVU38
 170               	.LBE17:
 171               	.LBE16:
 172               		.loc 1 45 5 is_stmt 0 view .LVU39
 173 0004 0091 0000 		lds r16,default_layer_state
 174 0008 1091 0000 		lds r17,default_layer_state+1
 175 000c 2091 0000 		lds r18,default_layer_state+2
 176 0010 3091 0000 		lds r19,default_layer_state+3
 177 0014 DC01      		movw r26,r24
 178 0016 CB01      		movw r24,r22
 179 0018 8023      		and r24,r16
 180 001a 9123      		and r25,r17
 181 001c A223      		and r26,r18
 182 001e B323      		and r27,r19
 183               	.LBB20:
 184               	.LBB18:
  23:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
 185               		.loc 1 23 25 view .LVU40
 186 0020 8093 0000 		sts default_layer_state,r24
 187 0024 9093 0000 		sts default_layer_state+1,r25
 188 0028 A093 0000 		sts default_layer_state+2,r26
 189 002c B093 0000 		sts default_layer_state+3,r27
 190               	.LVL9:
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 191               		.loc 1 24 5 is_stmt 1 view .LVU41
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 192               		.loc 1 24 39 view .LVU42
  25:./tmk_core/common/action_layer.c **** }
 193               		.loc 1 25 5 view .LVU43
 194               	/* epilogue start */
 195               	.LBE18:
 196               	.LBE20:
  46:./tmk_core/common/action_layer.c **** }
 197               		.loc 1 46 1 is_stmt 0 view .LVU44
 198 0030 1F91      		pop r17
 199 0032 0F91      		pop r16
 200               	.LVL10:
 201               	.LBB21:
 202               	.LBB19:
  25:./tmk_core/common/action_layer.c **** }
 203               		.loc 1 25 5 view .LVU45
 204 0034 0C94 0000 		jmp clear_keyboard_but_mods
 205               	.LVL11:
  25:./tmk_core/common/action_layer.c **** }
 206               		.loc 1 25 5 view .LVU46
 207               	.LBE19:
 208               	.LBE21:
 209               		.cfi_endproc
 210               	.LFE8:
 212               		.section	.text.default_layer_xor,"ax",@progbits
 213               	.global	default_layer_xor
 215               	default_layer_xor:
 216               	.LVL12:
 217               	.LFB9:
  47:./tmk_core/common/action_layer.c **** void default_layer_xor(uint32_t state)
  48:./tmk_core/common/action_layer.c **** {
 218               		.loc 1 48 1 is_stmt 1 view -0
 219               		.cfi_startproc
 220               		.loc 1 48 1 is_stmt 0 view .LVU48
 221 0000 0F93      		push r16
 222               	.LCFI4:
 223               		.cfi_def_cfa_offset 3
 224               		.cfi_offset 16, -2
 225 0002 1F93      		push r17
 226               	.LCFI5:
 227               		.cfi_def_cfa_offset 4
 228               		.cfi_offset 17, -3
 229               	/* prologue: function */
 230               	/* frame size = 0 */
 231               	/* stack size = 2 */
 232               	.L__stack_usage = 2
  49:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state ^ state);
 233               		.loc 1 49 5 is_stmt 1 view .LVU49
 234               	.LVL13:
 235               	.LBB24:
 236               	.LBI24:
  19:./tmk_core/common/action_layer.c **** {
 237               		.loc 1 19 13 view .LVU50
 238               	.LBB25:
  21:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug(" to ");
 239               		.loc 1 21 35 view .LVU51
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
 240               		.loc 1 22 5 view .LVU52
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
 241               		.loc 1 22 41 view .LVU53
  23:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
 242               		.loc 1 23 5 view .LVU54
 243               	.LBE25:
 244               	.LBE24:
 245               		.loc 1 49 5 is_stmt 0 view .LVU55
 246 0004 0091 0000 		lds r16,default_layer_state
 247 0008 1091 0000 		lds r17,default_layer_state+1
 248 000c 2091 0000 		lds r18,default_layer_state+2
 249 0010 3091 0000 		lds r19,default_layer_state+3
 250 0014 DC01      		movw r26,r24
 251 0016 CB01      		movw r24,r22
 252 0018 8027      		eor r24,r16
 253 001a 9127      		eor r25,r17
 254 001c A227      		eor r26,r18
 255 001e B327      		eor r27,r19
 256               	.LBB28:
 257               	.LBB26:
  23:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
 258               		.loc 1 23 25 view .LVU56
 259 0020 8093 0000 		sts default_layer_state,r24
 260 0024 9093 0000 		sts default_layer_state+1,r25
 261 0028 A093 0000 		sts default_layer_state+2,r26
 262 002c B093 0000 		sts default_layer_state+3,r27
 263               	.LVL14:
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 264               		.loc 1 24 5 is_stmt 1 view .LVU57
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 265               		.loc 1 24 39 view .LVU58
  25:./tmk_core/common/action_layer.c **** }
 266               		.loc 1 25 5 view .LVU59
 267               	/* epilogue start */
 268               	.LBE26:
 269               	.LBE28:
  50:./tmk_core/common/action_layer.c **** }
 270               		.loc 1 50 1 is_stmt 0 view .LVU60
 271 0030 1F91      		pop r17
 272 0032 0F91      		pop r16
 273               	.LVL15:
 274               	.LBB29:
 275               	.LBB27:
  25:./tmk_core/common/action_layer.c **** }
 276               		.loc 1 25 5 view .LVU61
 277 0034 0C94 0000 		jmp clear_keyboard_but_mods
 278               	.LVL16:
  25:./tmk_core/common/action_layer.c **** }
 279               		.loc 1 25 5 view .LVU62
 280               	.LBE27:
 281               	.LBE29:
 282               		.cfi_endproc
 283               	.LFE9:
 285               		.section	.text.layer_clear,"ax",@progbits
 286               	.global	layer_clear
 288               	layer_clear:
 289               	.LFB11:
  51:./tmk_core/common/action_layer.c **** #endif
  52:./tmk_core/common/action_layer.c **** 
  53:./tmk_core/common/action_layer.c **** 
  54:./tmk_core/common/action_layer.c **** #ifndef NO_ACTION_LAYER
  55:./tmk_core/common/action_layer.c **** /*
  56:./tmk_core/common/action_layer.c ****  * Keymap Layer State
  57:./tmk_core/common/action_layer.c ****  */
  58:./tmk_core/common/action_layer.c **** uint32_t layer_state = 0;
  59:./tmk_core/common/action_layer.c **** 
  60:./tmk_core/common/action_layer.c **** static void layer_state_set(uint32_t state)
  61:./tmk_core/common/action_layer.c **** {
  62:./tmk_core/common/action_layer.c ****     dprint("layer_state: ");
  63:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
  64:./tmk_core/common/action_layer.c ****     layer_state = state;
  65:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
  66:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
  67:./tmk_core/common/action_layer.c **** }
  68:./tmk_core/common/action_layer.c **** 
  69:./tmk_core/common/action_layer.c **** void layer_clear(void)
  70:./tmk_core/common/action_layer.c **** {
 290               		.loc 1 70 1 is_stmt 1 view -0
 291               		.cfi_startproc
 292               	/* prologue: function */
 293               	/* frame size = 0 */
 294               	/* stack size = 0 */
 295               	.L__stack_usage = 0
  71:./tmk_core/common/action_layer.c ****     layer_state_set(0);
 296               		.loc 1 71 5 view .LVU64
 297               	.LVL17:
 298               	.LBB32:
 299               	.LBI32:
  60:./tmk_core/common/action_layer.c **** {
 300               		.loc 1 60 13 view .LVU65
 301               	.LBB33:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 302               		.loc 1 62 28 view .LVU66
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 303               		.loc 1 63 5 view .LVU67
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 304               		.loc 1 63 34 view .LVU68
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 305               		.loc 1 64 5 view .LVU69
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 306               		.loc 1 64 17 is_stmt 0 view .LVU70
 307 0000 1092 0000 		sts layer_state,__zero_reg__
 308 0004 1092 0000 		sts layer_state+1,__zero_reg__
 309 0008 1092 0000 		sts layer_state+2,__zero_reg__
 310 000c 1092 0000 		sts layer_state+3,__zero_reg__
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 311               		.loc 1 65 5 is_stmt 1 view .LVU71
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 312               		.loc 1 65 30 view .LVU72
  66:./tmk_core/common/action_layer.c **** }
 313               		.loc 1 66 5 view .LVU73
 314 0010 0C94 0000 		jmp clear_keyboard_but_mods
 315               	.LVL18:
 316               	.LBE33:
 317               	.LBE32:
 318               		.cfi_endproc
 319               	.LFE11:
 321               		.section	.text.layer_move,"ax",@progbits
 322               	.global	layer_move
 324               	layer_move:
 325               	.LVL19:
 326               	.LFB12:
  72:./tmk_core/common/action_layer.c **** }
  73:./tmk_core/common/action_layer.c **** 
  74:./tmk_core/common/action_layer.c **** void layer_move(uint8_t layer)
  75:./tmk_core/common/action_layer.c **** {
 327               		.loc 1 75 1 view -0
 328               		.cfi_startproc
 329               	/* prologue: function */
 330               	/* frame size = 0 */
 331               	/* stack size = 0 */
 332               	.L__stack_usage = 0
  76:./tmk_core/common/action_layer.c ****     layer_state_set(1UL<<layer);
 333               		.loc 1 76 5 view .LVU75
 334               	.LBB36:
 335               	.LBI36:
  60:./tmk_core/common/action_layer.c **** {
 336               		.loc 1 60 13 view .LVU76
 337               	.LBB37:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 338               		.loc 1 62 28 view .LVU77
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 339               		.loc 1 63 5 view .LVU78
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 340               		.loc 1 63 34 view .LVU79
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 341               		.loc 1 64 5 view .LVU80
 342               	.LBE37:
 343               	.LBE36:
 344               		.loc 1 76 5 is_stmt 0 view .LVU81
 345 0000 41E0      		ldi r20,lo8(1)
 346 0002 50E0      		ldi r21,0
 347 0004 60E0      		ldi r22,0
 348 0006 70E0      		ldi r23,0
 349 0008 00C0      		rjmp 2f
 350               		1:
 351 000a 440F      		lsl r20
 352 000c 551F      		rol r21
 353 000e 661F      		rol r22
 354 0010 771F      		rol r23
 355               		2:
 356 0012 8A95      		dec r24
 357 0014 02F4      		brpl 1b
 358               	.LBB39:
 359               	.LBB38:
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 360               		.loc 1 64 17 view .LVU82
 361 0016 4093 0000 		sts layer_state,r20
 362 001a 5093 0000 		sts layer_state+1,r21
 363 001e 6093 0000 		sts layer_state+2,r22
 364 0022 7093 0000 		sts layer_state+3,r23
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 365               		.loc 1 65 5 is_stmt 1 view .LVU83
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 366               		.loc 1 65 30 view .LVU84
  66:./tmk_core/common/action_layer.c **** }
 367               		.loc 1 66 5 view .LVU85
 368 0026 0C94 0000 		jmp clear_keyboard_but_mods
 369               	.LVL20:
  66:./tmk_core/common/action_layer.c **** }
 370               		.loc 1 66 5 is_stmt 0 view .LVU86
 371               	.LBE38:
 372               	.LBE39:
 373               		.cfi_endproc
 374               	.LFE12:
 376               		.section	.text.layer_on,"ax",@progbits
 377               	.global	layer_on
 379               	layer_on:
 380               	.LVL21:
 381               	.LFB13:
  77:./tmk_core/common/action_layer.c **** }
  78:./tmk_core/common/action_layer.c **** 
  79:./tmk_core/common/action_layer.c **** void layer_on(uint8_t layer)
  80:./tmk_core/common/action_layer.c **** {
 382               		.loc 1 80 1 is_stmt 1 view -0
 383               		.cfi_startproc
 384               	/* prologue: function */
 385               	/* frame size = 0 */
 386               	/* stack size = 0 */
 387               	.L__stack_usage = 0
  81:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state | (1UL<<layer));
 388               		.loc 1 81 5 view .LVU88
 389               	.LBB42:
 390               	.LBI42:
  60:./tmk_core/common/action_layer.c **** {
 391               		.loc 1 60 13 view .LVU89
 392               	.LBB43:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 393               		.loc 1 62 28 view .LVU90
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 394               		.loc 1 63 5 view .LVU91
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 395               		.loc 1 63 34 view .LVU92
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 396               		.loc 1 64 5 view .LVU93
 397               	.LBE43:
 398               	.LBE42:
 399               		.loc 1 81 39 is_stmt 0 view .LVU94
 400 0000 41E0      		ldi r20,lo8(1)
 401 0002 50E0      		ldi r21,0
 402 0004 60E0      		ldi r22,0
 403 0006 70E0      		ldi r23,0
 404 0008 00C0      		rjmp 2f
 405               		1:
 406 000a 440F      		lsl r20
 407 000c 551F      		rol r21
 408 000e 661F      		rol r22
 409 0010 771F      		rol r23
 410               		2:
 411 0012 8A95      		dec r24
 412 0014 02F4      		brpl 1b
 413               		.loc 1 81 5 view .LVU95
 414 0016 8091 0000 		lds r24,layer_state
 415 001a 9091 0000 		lds r25,layer_state+1
 416 001e A091 0000 		lds r26,layer_state+2
 417 0022 B091 0000 		lds r27,layer_state+3
 418               	.LVL22:
 419               		.loc 1 81 5 view .LVU96
 420 0026 842B      		or r24,r20
 421 0028 952B      		or r25,r21
 422 002a A62B      		or r26,r22
 423 002c B72B      		or r27,r23
 424               	.LBB45:
 425               	.LBB44:
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 426               		.loc 1 64 17 view .LVU97
 427 002e 8093 0000 		sts layer_state,r24
 428 0032 9093 0000 		sts layer_state+1,r25
 429 0036 A093 0000 		sts layer_state+2,r26
 430 003a B093 0000 		sts layer_state+3,r27
 431               	.LVL23:
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 432               		.loc 1 65 5 is_stmt 1 view .LVU98
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 433               		.loc 1 65 30 view .LVU99
  66:./tmk_core/common/action_layer.c **** }
 434               		.loc 1 66 5 view .LVU100
 435 003e 0C94 0000 		jmp clear_keyboard_but_mods
 436               	.LVL24:
 437               	.LBE44:
 438               	.LBE45:
 439               		.cfi_endproc
 440               	.LFE13:
 442               		.section	.text.layer_off,"ax",@progbits
 443               	.global	layer_off
 445               	layer_off:
 446               	.LVL25:
 447               	.LFB14:
  82:./tmk_core/common/action_layer.c **** }
  83:./tmk_core/common/action_layer.c **** 
  84:./tmk_core/common/action_layer.c **** void layer_off(uint8_t layer)
  85:./tmk_core/common/action_layer.c **** {
 448               		.loc 1 85 1 view -0
 449               		.cfi_startproc
 450               	/* prologue: function */
 451               	/* frame size = 0 */
 452               	/* stack size = 0 */
 453               	.L__stack_usage = 0
  86:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state & ~(1UL<<layer));
 454               		.loc 1 86 5 view .LVU102
 455               	.LBB48:
 456               	.LBI48:
  60:./tmk_core/common/action_layer.c **** {
 457               		.loc 1 60 13 view .LVU103
 458               	.LBB49:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 459               		.loc 1 62 28 view .LVU104
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 460               		.loc 1 63 5 view .LVU105
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 461               		.loc 1 63 34 view .LVU106
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 462               		.loc 1 64 5 view .LVU107
 463               	.LBE49:
 464               	.LBE48:
 465               		.loc 1 86 40 is_stmt 0 view .LVU108
 466 0000 41E0      		ldi r20,lo8(1)
 467 0002 50E0      		ldi r21,0
 468 0004 60E0      		ldi r22,0
 469 0006 70E0      		ldi r23,0
 470 0008 00C0      		rjmp 2f
 471               		1:
 472 000a 440F      		lsl r20
 473 000c 551F      		rol r21
 474 000e 661F      		rol r22
 475 0010 771F      		rol r23
 476               		2:
 477 0012 8A95      		dec r24
 478 0014 02F4      		brpl 1b
 479               		.loc 1 86 35 view .LVU109
 480 0016 4095      		com r20
 481 0018 5095      		com r21
 482 001a 6095      		com r22
 483 001c 7095      		com r23
 484               		.loc 1 86 5 view .LVU110
 485 001e 8091 0000 		lds r24,layer_state
 486 0022 9091 0000 		lds r25,layer_state+1
 487 0026 A091 0000 		lds r26,layer_state+2
 488 002a B091 0000 		lds r27,layer_state+3
 489               	.LVL26:
 490               		.loc 1 86 5 view .LVU111
 491 002e 8423      		and r24,r20
 492 0030 9523      		and r25,r21
 493 0032 A623      		and r26,r22
 494 0034 B723      		and r27,r23
 495               	.LBB51:
 496               	.LBB50:
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 497               		.loc 1 64 17 view .LVU112
 498 0036 8093 0000 		sts layer_state,r24
 499 003a 9093 0000 		sts layer_state+1,r25
 500 003e A093 0000 		sts layer_state+2,r26
 501 0042 B093 0000 		sts layer_state+3,r27
 502               	.LVL27:
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 503               		.loc 1 65 5 is_stmt 1 view .LVU113
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 504               		.loc 1 65 30 view .LVU114
  66:./tmk_core/common/action_layer.c **** }
 505               		.loc 1 66 5 view .LVU115
 506 0046 0C94 0000 		jmp clear_keyboard_but_mods
 507               	.LVL28:
 508               	.LBE50:
 509               	.LBE51:
 510               		.cfi_endproc
 511               	.LFE14:
 513               		.section	.text.layer_invert,"ax",@progbits
 514               	.global	layer_invert
 516               	layer_invert:
 517               	.LVL29:
 518               	.LFB15:
  87:./tmk_core/common/action_layer.c **** }
  88:./tmk_core/common/action_layer.c **** 
  89:./tmk_core/common/action_layer.c **** void layer_invert(uint8_t layer)
  90:./tmk_core/common/action_layer.c **** {
 519               		.loc 1 90 1 view -0
 520               		.cfi_startproc
 521               	/* prologue: function */
 522               	/* frame size = 0 */
 523               	/* stack size = 0 */
 524               	.L__stack_usage = 0
  91:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state ^ (1UL<<layer));
 525               		.loc 1 91 5 view .LVU117
 526               	.LBB54:
 527               	.LBI54:
  60:./tmk_core/common/action_layer.c **** {
 528               		.loc 1 60 13 view .LVU118
 529               	.LBB55:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 530               		.loc 1 62 28 view .LVU119
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 531               		.loc 1 63 5 view .LVU120
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 532               		.loc 1 63 34 view .LVU121
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 533               		.loc 1 64 5 view .LVU122
 534               	.LBE55:
 535               	.LBE54:
 536               		.loc 1 91 39 is_stmt 0 view .LVU123
 537 0000 41E0      		ldi r20,lo8(1)
 538 0002 50E0      		ldi r21,0
 539 0004 60E0      		ldi r22,0
 540 0006 70E0      		ldi r23,0
 541 0008 00C0      		rjmp 2f
 542               		1:
 543 000a 440F      		lsl r20
 544 000c 551F      		rol r21
 545 000e 661F      		rol r22
 546 0010 771F      		rol r23
 547               		2:
 548 0012 8A95      		dec r24
 549 0014 02F4      		brpl 1b
 550               		.loc 1 91 5 view .LVU124
 551 0016 8091 0000 		lds r24,layer_state
 552 001a 9091 0000 		lds r25,layer_state+1
 553 001e A091 0000 		lds r26,layer_state+2
 554 0022 B091 0000 		lds r27,layer_state+3
 555               	.LVL30:
 556               		.loc 1 91 5 view .LVU125
 557 0026 8427      		eor r24,r20
 558 0028 9527      		eor r25,r21
 559 002a A627      		eor r26,r22
 560 002c B727      		eor r27,r23
 561               	.LBB57:
 562               	.LBB56:
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 563               		.loc 1 64 17 view .LVU126
 564 002e 8093 0000 		sts layer_state,r24
 565 0032 9093 0000 		sts layer_state+1,r25
 566 0036 A093 0000 		sts layer_state+2,r26
 567 003a B093 0000 		sts layer_state+3,r27
 568               	.LVL31:
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 569               		.loc 1 65 5 is_stmt 1 view .LVU127
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 570               		.loc 1 65 30 view .LVU128
  66:./tmk_core/common/action_layer.c **** }
 571               		.loc 1 66 5 view .LVU129
 572 003e 0C94 0000 		jmp clear_keyboard_but_mods
 573               	.LVL32:
 574               	.LBE56:
 575               	.LBE57:
 576               		.cfi_endproc
 577               	.LFE15:
 579               		.section	.text.layer_or,"ax",@progbits
 580               	.global	layer_or
 582               	layer_or:
 583               	.LVL33:
 584               	.LFB16:
  92:./tmk_core/common/action_layer.c **** }
  93:./tmk_core/common/action_layer.c **** 
  94:./tmk_core/common/action_layer.c **** void layer_or(uint32_t state)
  95:./tmk_core/common/action_layer.c **** {
 585               		.loc 1 95 1 view -0
 586               		.cfi_startproc
 587               		.loc 1 95 1 is_stmt 0 view .LVU131
 588 0000 0F93      		push r16
 589               	.LCFI6:
 590               		.cfi_def_cfa_offset 3
 591               		.cfi_offset 16, -2
 592 0002 1F93      		push r17
 593               	.LCFI7:
 594               		.cfi_def_cfa_offset 4
 595               		.cfi_offset 17, -3
 596               	/* prologue: function */
 597               	/* frame size = 0 */
 598               	/* stack size = 2 */
 599               	.L__stack_usage = 2
  96:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state | state);
 600               		.loc 1 96 5 is_stmt 1 view .LVU132
 601               	.LVL34:
 602               	.LBB60:
 603               	.LBI60:
  60:./tmk_core/common/action_layer.c **** {
 604               		.loc 1 60 13 view .LVU133
 605               	.LBB61:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 606               		.loc 1 62 28 view .LVU134
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 607               		.loc 1 63 5 view .LVU135
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 608               		.loc 1 63 34 view .LVU136
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 609               		.loc 1 64 5 view .LVU137
 610               	.LBE61:
 611               	.LBE60:
 612               		.loc 1 96 5 is_stmt 0 view .LVU138
 613 0004 0091 0000 		lds r16,layer_state
 614 0008 1091 0000 		lds r17,layer_state+1
 615 000c 2091 0000 		lds r18,layer_state+2
 616 0010 3091 0000 		lds r19,layer_state+3
 617 0014 DC01      		movw r26,r24
 618 0016 CB01      		movw r24,r22
 619 0018 802B      		or r24,r16
 620 001a 912B      		or r25,r17
 621 001c A22B      		or r26,r18
 622 001e B32B      		or r27,r19
 623               	.LBB64:
 624               	.LBB62:
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 625               		.loc 1 64 17 view .LVU139
 626 0020 8093 0000 		sts layer_state,r24
 627 0024 9093 0000 		sts layer_state+1,r25
 628 0028 A093 0000 		sts layer_state+2,r26
 629 002c B093 0000 		sts layer_state+3,r27
 630               	.LVL35:
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 631               		.loc 1 65 5 is_stmt 1 view .LVU140
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 632               		.loc 1 65 30 view .LVU141
  66:./tmk_core/common/action_layer.c **** }
 633               		.loc 1 66 5 view .LVU142
 634               	/* epilogue start */
 635               	.LBE62:
 636               	.LBE64:
  97:./tmk_core/common/action_layer.c **** }
 637               		.loc 1 97 1 is_stmt 0 view .LVU143
 638 0030 1F91      		pop r17
 639 0032 0F91      		pop r16
 640               	.LVL36:
 641               	.LBB65:
 642               	.LBB63:
  66:./tmk_core/common/action_layer.c **** }
 643               		.loc 1 66 5 view .LVU144
 644 0034 0C94 0000 		jmp clear_keyboard_but_mods
 645               	.LVL37:
  66:./tmk_core/common/action_layer.c **** }
 646               		.loc 1 66 5 view .LVU145
 647               	.LBE63:
 648               	.LBE65:
 649               		.cfi_endproc
 650               	.LFE16:
 652               		.section	.text.layer_and,"ax",@progbits
 653               	.global	layer_and
 655               	layer_and:
 656               	.LVL38:
 657               	.LFB17:
  98:./tmk_core/common/action_layer.c **** void layer_and(uint32_t state)
  99:./tmk_core/common/action_layer.c **** {
 658               		.loc 1 99 1 is_stmt 1 view -0
 659               		.cfi_startproc
 660               		.loc 1 99 1 is_stmt 0 view .LVU147
 661 0000 0F93      		push r16
 662               	.LCFI8:
 663               		.cfi_def_cfa_offset 3
 664               		.cfi_offset 16, -2
 665 0002 1F93      		push r17
 666               	.LCFI9:
 667               		.cfi_def_cfa_offset 4
 668               		.cfi_offset 17, -3
 669               	/* prologue: function */
 670               	/* frame size = 0 */
 671               	/* stack size = 2 */
 672               	.L__stack_usage = 2
 100:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state & state);
 673               		.loc 1 100 5 is_stmt 1 view .LVU148
 674               	.LVL39:
 675               	.LBB68:
 676               	.LBI68:
  60:./tmk_core/common/action_layer.c **** {
 677               		.loc 1 60 13 view .LVU149
 678               	.LBB69:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 679               		.loc 1 62 28 view .LVU150
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 680               		.loc 1 63 5 view .LVU151
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 681               		.loc 1 63 34 view .LVU152
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 682               		.loc 1 64 5 view .LVU153
 683               	.LBE69:
 684               	.LBE68:
 685               		.loc 1 100 5 is_stmt 0 view .LVU154
 686 0004 0091 0000 		lds r16,layer_state
 687 0008 1091 0000 		lds r17,layer_state+1
 688 000c 2091 0000 		lds r18,layer_state+2
 689 0010 3091 0000 		lds r19,layer_state+3
 690 0014 DC01      		movw r26,r24
 691 0016 CB01      		movw r24,r22
 692 0018 8023      		and r24,r16
 693 001a 9123      		and r25,r17
 694 001c A223      		and r26,r18
 695 001e B323      		and r27,r19
 696               	.LBB72:
 697               	.LBB70:
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 698               		.loc 1 64 17 view .LVU155
 699 0020 8093 0000 		sts layer_state,r24
 700 0024 9093 0000 		sts layer_state+1,r25
 701 0028 A093 0000 		sts layer_state+2,r26
 702 002c B093 0000 		sts layer_state+3,r27
 703               	.LVL40:
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 704               		.loc 1 65 5 is_stmt 1 view .LVU156
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 705               		.loc 1 65 30 view .LVU157
  66:./tmk_core/common/action_layer.c **** }
 706               		.loc 1 66 5 view .LVU158
 707               	/* epilogue start */
 708               	.LBE70:
 709               	.LBE72:
 101:./tmk_core/common/action_layer.c **** }
 710               		.loc 1 101 1 is_stmt 0 view .LVU159
 711 0030 1F91      		pop r17
 712 0032 0F91      		pop r16
 713               	.LVL41:
 714               	.LBB73:
 715               	.LBB71:
  66:./tmk_core/common/action_layer.c **** }
 716               		.loc 1 66 5 view .LVU160
 717 0034 0C94 0000 		jmp clear_keyboard_but_mods
 718               	.LVL42:
  66:./tmk_core/common/action_layer.c **** }
 719               		.loc 1 66 5 view .LVU161
 720               	.LBE71:
 721               	.LBE73:
 722               		.cfi_endproc
 723               	.LFE17:
 725               		.section	.text.layer_xor,"ax",@progbits
 726               	.global	layer_xor
 728               	layer_xor:
 729               	.LVL43:
 730               	.LFB18:
 102:./tmk_core/common/action_layer.c **** void layer_xor(uint32_t state)
 103:./tmk_core/common/action_layer.c **** {
 731               		.loc 1 103 1 is_stmt 1 view -0
 732               		.cfi_startproc
 733               		.loc 1 103 1 is_stmt 0 view .LVU163
 734 0000 0F93      		push r16
 735               	.LCFI10:
 736               		.cfi_def_cfa_offset 3
 737               		.cfi_offset 16, -2
 738 0002 1F93      		push r17
 739               	.LCFI11:
 740               		.cfi_def_cfa_offset 4
 741               		.cfi_offset 17, -3
 742               	/* prologue: function */
 743               	/* frame size = 0 */
 744               	/* stack size = 2 */
 745               	.L__stack_usage = 2
 104:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state ^ state);
 746               		.loc 1 104 5 is_stmt 1 view .LVU164
 747               	.LVL44:
 748               	.LBB76:
 749               	.LBI76:
  60:./tmk_core/common/action_layer.c **** {
 750               		.loc 1 60 13 view .LVU165
 751               	.LBB77:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 752               		.loc 1 62 28 view .LVU166
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 753               		.loc 1 63 5 view .LVU167
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 754               		.loc 1 63 34 view .LVU168
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 755               		.loc 1 64 5 view .LVU169
 756               	.LBE77:
 757               	.LBE76:
 758               		.loc 1 104 5 is_stmt 0 view .LVU170
 759 0004 0091 0000 		lds r16,layer_state
 760 0008 1091 0000 		lds r17,layer_state+1
 761 000c 2091 0000 		lds r18,layer_state+2
 762 0010 3091 0000 		lds r19,layer_state+3
 763 0014 DC01      		movw r26,r24
 764 0016 CB01      		movw r24,r22
 765 0018 8027      		eor r24,r16
 766 001a 9127      		eor r25,r17
 767 001c A227      		eor r26,r18
 768 001e B327      		eor r27,r19
 769               	.LBB80:
 770               	.LBB78:
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 771               		.loc 1 64 17 view .LVU171
 772 0020 8093 0000 		sts layer_state,r24
 773 0024 9093 0000 		sts layer_state+1,r25
 774 0028 A093 0000 		sts layer_state+2,r26
 775 002c B093 0000 		sts layer_state+3,r27
 776               	.LVL45:
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 777               		.loc 1 65 5 is_stmt 1 view .LVU172
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 778               		.loc 1 65 30 view .LVU173
  66:./tmk_core/common/action_layer.c **** }
 779               		.loc 1 66 5 view .LVU174
 780               	/* epilogue start */
 781               	.LBE78:
 782               	.LBE80:
 105:./tmk_core/common/action_layer.c **** }
 783               		.loc 1 105 1 is_stmt 0 view .LVU175
 784 0030 1F91      		pop r17
 785 0032 0F91      		pop r16
 786               	.LVL46:
 787               	.LBB81:
 788               	.LBB79:
  66:./tmk_core/common/action_layer.c **** }
 789               		.loc 1 66 5 view .LVU176
 790 0034 0C94 0000 		jmp clear_keyboard_but_mods
 791               	.LVL47:
  66:./tmk_core/common/action_layer.c **** }
 792               		.loc 1 66 5 view .LVU177
 793               	.LBE79:
 794               	.LBE81:
 795               		.cfi_endproc
 796               	.LFE18:
 798               		.section	.text.layer_debug,"ax",@progbits
 799               	.global	layer_debug
 801               	layer_debug:
 802               	.LFB26:
 803               		.cfi_startproc
 804               	/* prologue: function */
 805               	/* frame size = 0 */
 806               	/* stack size = 0 */
 807               	.L__stack_usage = 0
 808               	/* epilogue start */
 809 0000 0895      		ret
 810               		.cfi_endproc
 811               	.LFE26:
 813               		.section	.text.update_source_layers_cache,"ax",@progbits
 814               	.global	update_source_layers_cache
 816               	update_source_layers_cache:
 817               	.LVL48:
 818               	.LFB20:
 106:./tmk_core/common/action_layer.c **** 
 107:./tmk_core/common/action_layer.c **** void layer_debug(void)
 108:./tmk_core/common/action_layer.c **** {
 109:./tmk_core/common/action_layer.c ****     dprintf("%08lX(%u)", layer_state, biton32(layer_state));
 110:./tmk_core/common/action_layer.c **** }
 111:./tmk_core/common/action_layer.c **** #endif
 112:./tmk_core/common/action_layer.c **** 
 113:./tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && defined(PREVENT_STUCK_MODIFIERS)
 114:./tmk_core/common/action_layer.c **** uint8_t source_layers_cache[(MATRIX_ROWS * MATRIX_COLS + 7) / 8][MAX_LAYER_BITS] = {{0}};
 115:./tmk_core/common/action_layer.c **** 
 116:./tmk_core/common/action_layer.c **** void update_source_layers_cache(keypos_t key, uint8_t layer)
 117:./tmk_core/common/action_layer.c **** {
 819               		.loc 1 117 1 is_stmt 1 view -0
 820               		.cfi_startproc
 821               	/* prologue: function */
 822               	/* frame size = 0 */
 823               	/* stack size = 0 */
 824               	.L__stack_usage = 0
 118:./tmk_core/common/action_layer.c ****     const uint8_t key_number = key.col + (key.row * MATRIX_COLS);
 825               		.loc 1 118 5 view .LVU179
 826               		.loc 1 118 19 is_stmt 0 view .LVU180
 827 0000 2DE0      		ldi r18,lo8(13)
 828               		.loc 1 118 19 view .LVU181
 829 0002 929F      		mul r25,r18
 830 0004 800D      		add r24,r0
 831 0006 1124      		clr __zero_reg__
 832               	.LVL49:
 119:./tmk_core/common/action_layer.c ****     const uint8_t storage_row = key_number / 8;
 833               		.loc 1 119 5 is_stmt 1 view .LVU182
 120:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 834               		.loc 1 120 5 view .LVU183
 121:./tmk_core/common/action_layer.c **** 
 122:./tmk_core/common/action_layer.c ****     for (uint8_t bit_number = 0; bit_number < MAX_LAYER_BITS; bit_number++) {
 835               		.loc 1 122 5 view .LVU184
 836               	.LBB82:
 837               		.loc 1 122 10 view .LVU185
 838               		.loc 1 122 34 view .LVU186
 839               	.LBE82:
 120:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 840               		.loc 1 120 19 is_stmt 0 view .LVU187
 841 0008 982F      		mov r25,r24
 120:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 842               		.loc 1 120 19 view .LVU188
 843 000a 9770      		andi r25,lo8(7)
 844               	.LVL50:
 845               	.LBB83:
 123:./tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^=
 124:./tmk_core/common/action_layer.c ****             (-((layer & (1U << bit_number)) != 0)
 125:./tmk_core/common/action_layer.c ****              ^ source_layers_cache[storage_row][bit_number])
 126:./tmk_core/common/action_layer.c ****             & (1U << storage_bit);
 846               		.loc 1 126 13 view .LVU189
 847 000c 41E0      		ldi r20,lo8(1)
 848 000e 00C0      		rjmp 2f
 849               		1:
 850 0010 440F      		lsl r20
 851               		2:
 852 0012 9A95      		dec r25
 853 0014 02F4      		brpl 1b
 854               	.LBE83:
 119:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 855               		.loc 1 119 19 view .LVU190
 856 0016 8695      		lsr r24
 857 0018 8695      		lsr r24
 858 001a 8695      		lsr r24
 859               	.LVL51:
 119:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 860               		.loc 1 119 19 view .LVU191
 861 001c 95E0      		ldi r25,lo8(5)
 862               	.LVL52:
 119:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 863               		.loc 1 119 19 view .LVU192
 864 001e 899F      		mul r24,r25
 865 0020 F001      		movw r30,r0
 866 0022 1124      		clr __zero_reg__
 867 0024 E050      		subi r30,lo8(-(source_layers_cache))
 868 0026 F040      		sbci r31,hi8(-(source_layers_cache))
 869               	.LBB84:
 870               		.loc 1 126 13 view .LVU193
 871 0028 90E0      		ldi r25,0
 872 002a 80E0      		ldi r24,0
 873               	.LVL53:
 124:./tmk_core/common/action_layer.c ****              ^ source_layers_cache[storage_row][bit_number])
 874               		.loc 1 124 45 view .LVU194
 875 002c 70E0      		ldi r23,0
 876               	.LVL54:
 877               	.L16:
 123:./tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^=
 878               		.loc 1 123 9 is_stmt 1 discriminator 3 view .LVU195
 123:./tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^=
 879               		.loc 1 123 54 is_stmt 0 discriminator 3 view .LVU196
 880 002e 5191      		ld r21,Z+
 881 0030 DF01      		movw r26,r30
 882 0032 1197      		sbiw r26,1
 124:./tmk_core/common/action_layer.c ****              ^ source_layers_cache[storage_row][bit_number])
 883               		.loc 1 124 45 discriminator 3 view .LVU197
 884 0034 9B01      		movw r18,r22
 885 0036 082E      		mov r0,r24
 886 0038 00C0      		rjmp 2f
 887               		1:
 888 003a 3695      		lsr r19
 889 003c 2795      		ror r18
 890               		2:
 891 003e 0A94      		dec r0
 892 0040 02F4      		brpl 1b
 893 0042 2170      		andi r18,lo8(1)
 125:./tmk_core/common/action_layer.c ****             & (1U << storage_bit);
 894               		.loc 1 125 14 discriminator 3 view .LVU198
 895 0044 2195      		neg r18
 896 0046 2527      		eor r18,r21
 897               		.loc 1 126 13 discriminator 3 view .LVU199
 898 0048 2423      		and r18,r20
 123:./tmk_core/common/action_layer.c ****             (-((layer & (1U << bit_number)) != 0)
 899               		.loc 1 123 54 discriminator 3 view .LVU200
 900 004a 2527      		eor r18,r21
 901 004c 2C93      		st X,r18
 122:./tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^=
 902               		.loc 1 122 63 is_stmt 1 discriminator 3 view .LVU201
 903               	.LVL55:
 122:./tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^=
 904               		.loc 1 122 34 discriminator 3 view .LVU202
 905 004e 0196      		adiw r24,1
 906               	.LVL56:
 122:./tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^=
 907               		.loc 1 122 5 is_stmt 0 discriminator 3 view .LVU203
 908 0050 8530      		cpi r24,5
 909 0052 9105      		cpc r25,__zero_reg__
 910 0054 01F4      		brne .L16
 911               	/* epilogue start */
 912               	.LBE84:
 127:./tmk_core/common/action_layer.c ****     }
 128:./tmk_core/common/action_layer.c **** }
 913               		.loc 1 128 1 view .LVU204
 914 0056 0895      		ret
 915               		.cfi_endproc
 916               	.LFE20:
 918               		.section	.text.read_source_layers_cache,"ax",@progbits
 919               	.global	read_source_layers_cache
 921               	read_source_layers_cache:
 922               	.LVL57:
 923               	.LFB21:
 129:./tmk_core/common/action_layer.c **** 
 130:./tmk_core/common/action_layer.c **** uint8_t read_source_layers_cache(keypos_t key)
 131:./tmk_core/common/action_layer.c **** {
 924               		.loc 1 131 1 is_stmt 1 view -0
 925               		.cfi_startproc
 926               	/* prologue: function */
 927               	/* frame size = 0 */
 928               	/* stack size = 0 */
 929               	.L__stack_usage = 0
 132:./tmk_core/common/action_layer.c ****     const uint8_t key_number = key.col + (key.row * MATRIX_COLS);
 930               		.loc 1 132 5 view .LVU206
 931               		.loc 1 132 19 is_stmt 0 view .LVU207
 932 0000 2DE0      		ldi r18,lo8(13)
 933               		.loc 1 132 19 view .LVU208
 934 0002 929F      		mul r25,r18
 935 0004 800D      		add r24,r0
 936 0006 1124      		clr __zero_reg__
 937               	.LVL58:
 133:./tmk_core/common/action_layer.c ****     const uint8_t storage_row = key_number / 8;
 938               		.loc 1 133 5 is_stmt 1 view .LVU209
 134:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 939               		.loc 1 134 5 view .LVU210
 940               		.loc 1 134 19 is_stmt 0 view .LVU211
 941 0008 982F      		mov r25,r24
 942               		.loc 1 134 19 view .LVU212
 943 000a 9770      		andi r25,lo8(7)
 944               	.LVL59:
 135:./tmk_core/common/action_layer.c ****     uint8_t layer = 0;
 945               		.loc 1 135 5 is_stmt 1 view .LVU213
 136:./tmk_core/common/action_layer.c **** 
 137:./tmk_core/common/action_layer.c ****     for (uint8_t bit_number = 0; bit_number < MAX_LAYER_BITS; bit_number++) {
 946               		.loc 1 137 5 view .LVU214
 947               	.LBB85:
 948               		.loc 1 137 10 view .LVU215
 949               		.loc 1 137 34 view .LVU216
 950               	.LBE85:
 133:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 951               		.loc 1 133 19 is_stmt 0 view .LVU217
 952 000c 8695      		lsr r24
 953 000e 8695      		lsr r24
 954 0010 8695      		lsr r24
 955               	.LVL60:
 133:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 956               		.loc 1 133 19 view .LVU218
 957 0012 25E0      		ldi r18,lo8(5)
 958 0014 829F      		mul r24,r18
 959 0016 F001      		movw r30,r0
 960 0018 1124      		clr __zero_reg__
 961 001a E050      		subi r30,lo8(-(source_layers_cache))
 962 001c F040      		sbci r31,hi8(-(source_layers_cache))
 134:./tmk_core/common/action_layer.c ****     uint8_t layer = 0;
 963               		.loc 1 134 19 view .LVU219
 964 001e 50E0      		ldi r21,0
 965 0020 40E0      		ldi r20,0
 135:./tmk_core/common/action_layer.c **** 
 966               		.loc 1 135 13 view .LVU220
 967 0022 80E0      		ldi r24,0
 968               	.LVL61:
 969               	.L19:
 970               	.LBB86:
 138:./tmk_core/common/action_layer.c ****         layer |=
 971               		.loc 1 138 9 is_stmt 1 discriminator 3 view .LVU221
 139:./tmk_core/common/action_layer.c ****             ((source_layers_cache[storage_row][bit_number]
 972               		.loc 1 139 47 is_stmt 0 discriminator 3 view .LVU222
 973 0024 2191      		ld r18,Z+
 974 0026 30E0      		ldi r19,0
 140:./tmk_core/common/action_layer.c ****               & (1U << storage_bit)) != 0)
 975               		.loc 1 140 38 discriminator 3 view .LVU223
 976 0028 092E      		mov r0,r25
 977 002a 00C0      		rjmp 2f
 978               		1:
 979 002c 3695      		lsr r19
 980 002e 2795      		ror r18
 981               		2:
 982 0030 0A94      		dec r0
 983 0032 02F4      		brpl 1b
 984 0034 2170      		andi r18,1
 985 0036 3327      		clr r19
 141:./tmk_core/common/action_layer.c ****             << bit_number;
 986               		.loc 1 141 13 discriminator 3 view .LVU224
 987 0038 042E      		mov r0,r20
 988 003a 00C0      		rjmp 2f
 989               		1:
 990 003c 220F      		lsl r18
 991               		2:
 992 003e 0A94      		dec r0
 993 0040 02F4      		brpl 1b
 138:./tmk_core/common/action_layer.c ****             ((source_layers_cache[storage_row][bit_number]
 994               		.loc 1 138 15 discriminator 3 view .LVU225
 995 0042 822B      		or r24,r18
 996               	.LVL62:
 137:./tmk_core/common/action_layer.c ****         layer |=
 997               		.loc 1 137 63 is_stmt 1 discriminator 3 view .LVU226
 137:./tmk_core/common/action_layer.c ****         layer |=
 998               		.loc 1 137 34 discriminator 3 view .LVU227
 999 0044 4F5F      		subi r20,-1
 1000 0046 5F4F      		sbci r21,-1
 1001               	.LVL63:
 137:./tmk_core/common/action_layer.c ****         layer |=
 1002               		.loc 1 137 5 is_stmt 0 discriminator 3 view .LVU228
 1003 0048 4530      		cpi r20,5
 1004 004a 5105      		cpc r21,__zero_reg__
 1005 004c 01F4      		brne .L19
 1006               	/* epilogue start */
 1007               	.LBE86:
 142:./tmk_core/common/action_layer.c ****     }
 143:./tmk_core/common/action_layer.c **** 
 144:./tmk_core/common/action_layer.c ****     return layer;
 145:./tmk_core/common/action_layer.c **** }
 1008               		.loc 1 145 1 view .LVU229
 1009 004e 0895      		ret
 1010               		.cfi_endproc
 1011               	.LFE21:
 1013               		.section	.text.layer_switch_get_layer,"ax",@progbits
 1014               	.global	layer_switch_get_layer
 1016               	layer_switch_get_layer:
 1017               	.LVL64:
 1018               	.LFB23:
 146:./tmk_core/common/action_layer.c **** #endif
 147:./tmk_core/common/action_layer.c **** 
 148:./tmk_core/common/action_layer.c **** /*
 149:./tmk_core/common/action_layer.c ****  * Make sure the action triggered when the key is released is the same
 150:./tmk_core/common/action_layer.c ****  * one as the one triggered on press. It's important for the mod keys
 151:./tmk_core/common/action_layer.c ****  * when the layer is switched after the down event but before the up
 152:./tmk_core/common/action_layer.c ****  * event as they may get stuck otherwise.
 153:./tmk_core/common/action_layer.c ****  */
 154:./tmk_core/common/action_layer.c **** action_t store_or_get_action(bool pressed, keypos_t key)
 155:./tmk_core/common/action_layer.c **** {
 156:./tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && defined(PREVENT_STUCK_MODIFIERS)
 157:./tmk_core/common/action_layer.c ****     if (disable_action_cache) {
 158:./tmk_core/common/action_layer.c ****         return layer_switch_get_action(key);
 159:./tmk_core/common/action_layer.c ****     }
 160:./tmk_core/common/action_layer.c **** 
 161:./tmk_core/common/action_layer.c ****     uint8_t layer;
 162:./tmk_core/common/action_layer.c **** 
 163:./tmk_core/common/action_layer.c ****     if (pressed) {
 164:./tmk_core/common/action_layer.c ****         layer = layer_switch_get_layer(key);
 165:./tmk_core/common/action_layer.c ****         update_source_layers_cache(key, layer);
 166:./tmk_core/common/action_layer.c ****     }
 167:./tmk_core/common/action_layer.c ****     else {
 168:./tmk_core/common/action_layer.c ****         layer = read_source_layers_cache(key);
 169:./tmk_core/common/action_layer.c ****     }
 170:./tmk_core/common/action_layer.c ****     return action_for_key(layer, key);
 171:./tmk_core/common/action_layer.c **** #else
 172:./tmk_core/common/action_layer.c ****     return layer_switch_get_action(key);
 173:./tmk_core/common/action_layer.c **** #endif
 174:./tmk_core/common/action_layer.c **** }
 175:./tmk_core/common/action_layer.c **** 
 176:./tmk_core/common/action_layer.c **** 
 177:./tmk_core/common/action_layer.c **** int8_t layer_switch_get_layer(keypos_t key)
 178:./tmk_core/common/action_layer.c **** {
 1019               		.loc 1 178 1 is_stmt 1 view -0
 1020               		.cfi_startproc
 1021               		.loc 1 178 1 is_stmt 0 view .LVU231
 1022 0000 BF92      		push r11
 1023               	.LCFI12:
 1024               		.cfi_def_cfa_offset 3
 1025               		.cfi_offset 11, -2
 1026 0002 CF92      		push r12
 1027               	.LCFI13:
 1028               		.cfi_def_cfa_offset 4
 1029               		.cfi_offset 12, -3
 1030 0004 DF92      		push r13
 1031               	.LCFI14:
 1032               		.cfi_def_cfa_offset 5
 1033               		.cfi_offset 13, -4
 1034 0006 EF92      		push r14
 1035               	.LCFI15:
 1036               		.cfi_def_cfa_offset 6
 1037               		.cfi_offset 14, -5
 1038 0008 FF92      		push r15
 1039               	.LCFI16:
 1040               		.cfi_def_cfa_offset 7
 1041               		.cfi_offset 15, -6
 1042 000a 0F93      		push r16
 1043               	.LCFI17:
 1044               		.cfi_def_cfa_offset 8
 1045               		.cfi_offset 16, -7
 1046 000c 1F93      		push r17
 1047               	.LCFI18:
 1048               		.cfi_def_cfa_offset 9
 1049               		.cfi_offset 17, -8
 1050 000e CF93      		push r28
 1051               	.LCFI19:
 1052               		.cfi_def_cfa_offset 10
 1053               		.cfi_offset 28, -9
 1054 0010 DF93      		push r29
 1055               	.LCFI20:
 1056               		.cfi_def_cfa_offset 11
 1057               		.cfi_offset 29, -10
 1058               	/* prologue: function */
 1059               	/* frame size = 0 */
 1060               	/* stack size = 9 */
 1061               	.L__stack_usage = 9
 1062 0012 8C01      		movw r16,r24
 179:./tmk_core/common/action_layer.c ****     action_t action;
 1063               		.loc 1 179 5 is_stmt 1 view .LVU232
 180:./tmk_core/common/action_layer.c ****     action.code = ACTION_TRANSPARENT;
 1064               		.loc 1 180 5 view .LVU233
 1065               	.LVL65:
 181:./tmk_core/common/action_layer.c **** 
 182:./tmk_core/common/action_layer.c **** #ifndef NO_ACTION_LAYER
 183:./tmk_core/common/action_layer.c ****     uint32_t layers = layer_state | default_layer_state;
 1066               		.loc 1 183 5 view .LVU234
 1067               		.loc 1 183 14 is_stmt 0 view .LVU235
 1068 0014 C090 0000 		lds r12,layer_state
 1069 0018 D090 0000 		lds r13,layer_state+1
 1070 001c E090 0000 		lds r14,layer_state+2
 1071 0020 F090 0000 		lds r15,layer_state+3
 1072 0024 8091 0000 		lds r24,default_layer_state
 1073 0028 9091 0000 		lds r25,default_layer_state+1
 1074 002c A091 0000 		lds r26,default_layer_state+2
 1075 0030 B091 0000 		lds r27,default_layer_state+3
 1076               	.LVL66:
 1077               		.loc 1 183 14 view .LVU236
 1078 0034 C82A      		or r12,r24
 1079 0036 D92A      		or r13,r25
 1080 0038 EA2A      		or r14,r26
 1081 003a FB2A      		or r15,r27
 1082               	.LVL67:
 184:./tmk_core/common/action_layer.c ****     /* check top layer first */
 185:./tmk_core/common/action_layer.c ****     for (int8_t i = 31; i >= 0; i--) {
 1083               		.loc 1 185 5 is_stmt 1 view .LVU237
 1084               	.LBB87:
 1085               		.loc 1 185 10 view .LVU238
 1086               		.loc 1 185 25 view .LVU239
 1087               	.LBE87:
 183:./tmk_core/common/action_layer.c ****     /* check top layer first */
 1088               		.loc 1 183 14 is_stmt 0 view .LVU240
 1089 003c CFE1      		ldi r28,lo8(31)
 1090 003e D0E0      		ldi r29,0
 1091               	.LVL68:
 1092               	.L23:
 183:./tmk_core/common/action_layer.c ****     /* check top layer first */
 1093               		.loc 1 183 14 view .LVU241
 1094 0040 BC2E      		mov r11,r28
 1095               	.LVL69:
 1096               	.LBB88:
 186:./tmk_core/common/action_layer.c ****         if (layers & (1UL<<i)) {
 1097               		.loc 1 186 9 is_stmt 1 view .LVU242
 1098               		.loc 1 186 13 is_stmt 0 view .LVU243
 1099 0042 D701      		movw r26,r14
 1100 0044 C601      		movw r24,r12
 1101 0046 0C2E      		mov r0,r28
 1102 0048 00C0      		rjmp 2f
 1103               		1:
 1104 004a B695      		lsr r27
 1105 004c A795      		ror r26
 1106 004e 9795      		ror r25
 1107 0050 8795      		ror r24
 1108               		2:
 1109 0052 0A94      		dec r0
 1110 0054 02F4      		brpl 1b
 1111               		.loc 1 186 12 view .LVU244
 1112 0056 80FD      		sbrc r24,0
 1113 0058 00C0      		rjmp .L22
 1114               	.L25:
 185:./tmk_core/common/action_layer.c ****         if (layers & (1UL<<i)) {
 1115               		.loc 1 185 33 is_stmt 1 view .LVU245
 1116               	.LVL70:
 185:./tmk_core/common/action_layer.c ****         if (layers & (1UL<<i)) {
 1117               		.loc 1 185 25 view .LVU246
 1118               	.LVL71:
 1119 005a 2197      		sbiw r28,1
 1120 005c 00F4      		brcc .L23
 185:./tmk_core/common/action_layer.c ****         if (layers & (1UL<<i)) {
 1121               		.loc 1 185 25 is_stmt 0 view .LVU247
 1122               	.LBE88:
 187:./tmk_core/common/action_layer.c ****             action = action_for_key(i, key);
 188:./tmk_core/common/action_layer.c ****             if (action.code != ACTION_TRANSPARENT) {
 189:./tmk_core/common/action_layer.c ****                 return i;
 190:./tmk_core/common/action_layer.c ****             }
 191:./tmk_core/common/action_layer.c ****         }
 192:./tmk_core/common/action_layer.c ****     }
 193:./tmk_core/common/action_layer.c ****     /* fall back to layer 0 */
 194:./tmk_core/common/action_layer.c ****     return 0;
 1123               		.loc 1 194 12 view .LVU248
 1124 005e B12C      		mov r11,__zero_reg__
 1125               	.LVL72:
 1126               	.L21:
 195:./tmk_core/common/action_layer.c **** #else
 196:./tmk_core/common/action_layer.c ****     return biton32(default_layer_state);
 197:./tmk_core/common/action_layer.c **** #endif
 198:./tmk_core/common/action_layer.c **** }
 1127               		.loc 1 198 1 view .LVU249
 1128 0060 8B2D      		mov r24,r11
 1129               	/* epilogue start */
 1130 0062 DF91      		pop r29
 1131 0064 CF91      		pop r28
 1132 0066 1F91      		pop r17
 1133 0068 0F91      		pop r16
 1134               	.LVL73:
 1135               		.loc 1 198 1 view .LVU250
 1136 006a FF90      		pop r15
 1137 006c EF90      		pop r14
 1138 006e DF90      		pop r13
 1139 0070 CF90      		pop r12
 1140               	.LVL74:
 1141               		.loc 1 198 1 view .LVU251
 1142 0072 BF90      		pop r11
 1143 0074 0895      		ret
 1144               	.LVL75:
 1145               	.L22:
 1146               	.LBB89:
 187:./tmk_core/common/action_layer.c ****             action = action_for_key(i, key);
 1147               		.loc 1 187 13 is_stmt 1 view .LVU252
 187:./tmk_core/common/action_layer.c ****             action = action_for_key(i, key);
 1148               		.loc 1 187 22 is_stmt 0 view .LVU253
 1149 0076 B801      		movw r22,r16
 1150 0078 8C2F      		mov r24,r28
 1151 007a 0E94 0000 		call action_for_key
 1152               	.LVL76:
 188:./tmk_core/common/action_layer.c ****                 return i;
 1153               		.loc 1 188 13 is_stmt 1 view .LVU254
 188:./tmk_core/common/action_layer.c ****                 return i;
 1154               		.loc 1 188 16 is_stmt 0 view .LVU255
 1155 007e 0197      		sbiw r24,1
 1156 0080 01F0      		breq .L25
 1157 0082 00C0      		rjmp .L21
 1158               	.LBE89:
 1159               		.cfi_endproc
 1160               	.LFE23:
 1162               		.section	.text.layer_switch_get_action,"ax",@progbits
 1163               	.global	layer_switch_get_action
 1165               	layer_switch_get_action:
 1166               	.LVL77:
 1167               	.LFB24:
 199:./tmk_core/common/action_layer.c **** 
 200:./tmk_core/common/action_layer.c **** action_t layer_switch_get_action(keypos_t key)
 201:./tmk_core/common/action_layer.c **** {
 1168               		.loc 1 201 1 is_stmt 1 view -0
 1169               		.cfi_startproc
 1170               		.loc 1 201 1 is_stmt 0 view .LVU257
 1171 0000 CF93      		push r28
 1172               	.LCFI21:
 1173               		.cfi_def_cfa_offset 3
 1174               		.cfi_offset 28, -2
 1175 0002 DF93      		push r29
 1176               	.LCFI22:
 1177               		.cfi_def_cfa_offset 4
 1178               		.cfi_offset 29, -3
 1179               	/* prologue: function */
 1180               	/* frame size = 0 */
 1181               	/* stack size = 2 */
 1182               	.L__stack_usage = 2
 1183 0004 EC01      		movw r28,r24
 202:./tmk_core/common/action_layer.c ****     return action_for_key(layer_switch_get_layer(key), key);
 1184               		.loc 1 202 5 is_stmt 1 view .LVU258
 1185               		.loc 1 202 27 is_stmt 0 view .LVU259
 1186 0006 0E94 0000 		call layer_switch_get_layer
 1187               	.LVL78:
 1188               		.loc 1 202 12 view .LVU260
 1189 000a BE01      		movw r22,r28
 1190               	/* epilogue start */
 203:./tmk_core/common/action_layer.c **** }
 1191               		.loc 1 203 1 view .LVU261
 1192 000c DF91      		pop r29
 1193 000e CF91      		pop r28
 1194               	.LVL79:
 202:./tmk_core/common/action_layer.c ****     return action_for_key(layer_switch_get_layer(key), key);
 1195               		.loc 1 202 12 view .LVU262
 1196 0010 0C94 0000 		jmp action_for_key
 1197               	.LVL80:
 1198               		.cfi_endproc
 1199               	.LFE24:
 1201               		.section	.text.store_or_get_action,"ax",@progbits
 1202               	.global	store_or_get_action
 1204               	store_or_get_action:
 1205               	.LVL81:
 1206               	.LFB22:
 155:./tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && defined(PREVENT_STUCK_MODIFIERS)
 1207               		.loc 1 155 1 is_stmt 1 view -0
 1208               		.cfi_startproc
 155:./tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && defined(PREVENT_STUCK_MODIFIERS)
 1209               		.loc 1 155 1 is_stmt 0 view .LVU264
 1210 0000 1F93      		push r17
 1211               	.LCFI23:
 1212               		.cfi_def_cfa_offset 3
 1213               		.cfi_offset 17, -2
 1214 0002 CF93      		push r28
 1215               	.LCFI24:
 1216               		.cfi_def_cfa_offset 4
 1217               		.cfi_offset 28, -3
 1218 0004 DF93      		push r29
 1219               	.LCFI25:
 1220               		.cfi_def_cfa_offset 5
 1221               		.cfi_offset 29, -4
 1222               	/* prologue: function */
 1223               	/* frame size = 0 */
 1224               	/* stack size = 3 */
 1225               	.L__stack_usage = 3
 1226 0006 EB01      		movw r28,r22
 157:./tmk_core/common/action_layer.c ****         return layer_switch_get_action(key);
 1227               		.loc 1 157 5 is_stmt 1 view .LVU265
 157:./tmk_core/common/action_layer.c ****         return layer_switch_get_action(key);
 1228               		.loc 1 157 8 is_stmt 0 view .LVU266
 1229 0008 9091 0000 		lds r25,disable_action_cache
 1230 000c 9923      		tst r25
 1231 000e 01F0      		breq .L32
 158:./tmk_core/common/action_layer.c ****     }
 1232               		.loc 1 158 9 is_stmt 1 view .LVU267
 158:./tmk_core/common/action_layer.c ****     }
 1233               		.loc 1 158 16 is_stmt 0 view .LVU268
 1234 0010 CB01      		movw r24,r22
 1235               	.LVL82:
 1236               	/* epilogue start */
 174:./tmk_core/common/action_layer.c **** 
 1237               		.loc 1 174 1 view .LVU269
 1238 0012 DF91      		pop r29
 1239 0014 CF91      		pop r28
 1240 0016 1F91      		pop r17
 158:./tmk_core/common/action_layer.c ****     }
 1241               		.loc 1 158 16 view .LVU270
 1242 0018 0C94 0000 		jmp layer_switch_get_action
 1243               	.LVL83:
 1244               	.L32:
 161:./tmk_core/common/action_layer.c **** 
 1245               		.loc 1 161 5 is_stmt 1 view .LVU271
 163:./tmk_core/common/action_layer.c ****         layer = layer_switch_get_layer(key);
 1246               		.loc 1 163 5 view .LVU272
 163:./tmk_core/common/action_layer.c ****         layer = layer_switch_get_layer(key);
 1247               		.loc 1 163 8 is_stmt 0 view .LVU273
 1248 001c 8823      		tst r24
 1249 001e 01F0      		breq .L33
 164:./tmk_core/common/action_layer.c ****         update_source_layers_cache(key, layer);
 1250               		.loc 1 164 9 is_stmt 1 view .LVU274
 164:./tmk_core/common/action_layer.c ****         update_source_layers_cache(key, layer);
 1251               		.loc 1 164 17 is_stmt 0 view .LVU275
 1252 0020 CB01      		movw r24,r22
 1253               	.LVL84:
 164:./tmk_core/common/action_layer.c ****         update_source_layers_cache(key, layer);
 1254               		.loc 1 164 17 view .LVU276
 1255 0022 0E94 0000 		call layer_switch_get_layer
 1256               	.LVL85:
 1257 0026 182F      		mov r17,r24
 1258               	.LVL86:
 165:./tmk_core/common/action_layer.c ****     }
 1259               		.loc 1 165 9 is_stmt 1 view .LVU277
 1260 0028 682F      		mov r22,r24
 1261 002a CE01      		movw r24,r28
 1262 002c 0E94 0000 		call update_source_layers_cache
 1263               	.LVL87:
 1264               	.L34:
 170:./tmk_core/common/action_layer.c **** #else
 1265               		.loc 1 170 5 view .LVU278
 170:./tmk_core/common/action_layer.c **** #else
 1266               		.loc 1 170 12 is_stmt 0 view .LVU279
 1267 0030 BE01      		movw r22,r28
 1268 0032 812F      		mov r24,r17
 1269               	/* epilogue start */
 174:./tmk_core/common/action_layer.c **** 
 1270               		.loc 1 174 1 view .LVU280
 1271 0034 DF91      		pop r29
 1272 0036 CF91      		pop r28
 1273               	.LVL88:
 174:./tmk_core/common/action_layer.c **** 
 1274               		.loc 1 174 1 view .LVU281
 1275 0038 1F91      		pop r17
 1276               	.LVL89:
 170:./tmk_core/common/action_layer.c **** #else
 1277               		.loc 1 170 12 view .LVU282
 1278 003a 0C94 0000 		jmp action_for_key
 1279               	.LVL90:
 1280               	.L33:
 168:./tmk_core/common/action_layer.c ****     }
 1281               		.loc 1 168 9 is_stmt 1 view .LVU283
 168:./tmk_core/common/action_layer.c ****     }
 1282               		.loc 1 168 17 is_stmt 0 view .LVU284
 1283 003e CB01      		movw r24,r22
 1284               	.LVL91:
 168:./tmk_core/common/action_layer.c ****     }
 1285               		.loc 1 168 17 view .LVU285
 1286 0040 0E94 0000 		call read_source_layers_cache
 1287               	.LVL92:
 1288 0044 182F      		mov r17,r24
 1289               	.LVL93:
 168:./tmk_core/common/action_layer.c ****     }
 1290               		.loc 1 168 17 view .LVU286
 1291 0046 00C0      		rjmp .L34
 1292               		.cfi_endproc
 1293               	.LFE22:
 1295               	.global	source_layers_cache
 1296               		.section	.bss.source_layers_cache,"aw",@nobits
 1299               	source_layers_cache:
 1300 0000 0000 0000 		.zero	60
 1300      0000 0000 
 1300      0000 0000 
 1300      0000 0000 
 1300      0000 0000 
 1301               	.global	layer_state
 1302               		.section	.bss.layer_state,"aw",@nobits
 1305               	layer_state:
 1306 0000 0000 0000 		.zero	4
 1307               	.global	default_layer_state
 1308               		.section	.bss.default_layer_state,"aw",@nobits
 1311               	default_layer_state:
 1312 0000 0000 0000 		.zero	4
 1313               		.text
 1314               	.Letext0:
 1315               		.file 2 "/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/stdint.h"
 1316               		.file 3 "./tmk_core/common/keyboard.h"
 1317               		.file 4 "./tmk_core/common/action_code.h"
 1318               		.file 5 "./tmk_core/common/action.h"
 1319               		.file 6 "./tmk_core/common/action_layer.h"
 1320               		.file 7 "./tmk_core/common/debug.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 action_layer.c
/var/folders/mf/5466dhw562q7lyk542tgnwkc0000gn/T//ccR8euRB.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/mf/5466dhw562q7lyk542tgnwkc0000gn/T//ccR8euRB.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/mf/5466dhw562q7lyk542tgnwkc0000gn/T//ccR8euRB.s:4      *ABS*:000000000000003f __SREG__
/var/folders/mf/5466dhw562q7lyk542tgnwkc0000gn/T//ccR8euRB.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/mf/5466dhw562q7lyk542tgnwkc0000gn/T//ccR8euRB.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/mf/5466dhw562q7lyk542tgnwkc0000gn/T//ccR8euRB.s:13     .text.default_layer_debug:0000000000000000 default_layer_debug
/var/folders/mf/5466dhw562q7lyk542tgnwkc0000gn/T//ccR8euRB.s:32     .text.default_layer_set:0000000000000000 default_layer_set
/var/folders/mf/5466dhw562q7lyk542tgnwkc0000gn/T//ccR8euRB.s:1311   .bss.default_layer_state:0000000000000000 default_layer_state
/var/folders/mf/5466dhw562q7lyk542tgnwkc0000gn/T//ccR8euRB.s:69     .text.default_layer_or:0000000000000000 default_layer_or
/var/folders/mf/5466dhw562q7lyk542tgnwkc0000gn/T//ccR8euRB.s:142    .text.default_layer_and:0000000000000000 default_layer_and
/var/folders/mf/5466dhw562q7lyk542tgnwkc0000gn/T//ccR8euRB.s:215    .text.default_layer_xor:0000000000000000 default_layer_xor
/var/folders/mf/5466dhw562q7lyk542tgnwkc0000gn/T//ccR8euRB.s:288    .text.layer_clear:0000000000000000 layer_clear
/var/folders/mf/5466dhw562q7lyk542tgnwkc0000gn/T//ccR8euRB.s:1305   .bss.layer_state:0000000000000000 layer_state
/var/folders/mf/5466dhw562q7lyk542tgnwkc0000gn/T//ccR8euRB.s:324    .text.layer_move:0000000000000000 layer_move
/var/folders/mf/5466dhw562q7lyk542tgnwkc0000gn/T//ccR8euRB.s:379    .text.layer_on:0000000000000000 layer_on
/var/folders/mf/5466dhw562q7lyk542tgnwkc0000gn/T//ccR8euRB.s:445    .text.layer_off:0000000000000000 layer_off
/var/folders/mf/5466dhw562q7lyk542tgnwkc0000gn/T//ccR8euRB.s:516    .text.layer_invert:0000000000000000 layer_invert
/var/folders/mf/5466dhw562q7lyk542tgnwkc0000gn/T//ccR8euRB.s:582    .text.layer_or:0000000000000000 layer_or
/var/folders/mf/5466dhw562q7lyk542tgnwkc0000gn/T//ccR8euRB.s:655    .text.layer_and:0000000000000000 layer_and
/var/folders/mf/5466dhw562q7lyk542tgnwkc0000gn/T//ccR8euRB.s:728    .text.layer_xor:0000000000000000 layer_xor
/var/folders/mf/5466dhw562q7lyk542tgnwkc0000gn/T//ccR8euRB.s:801    .text.layer_debug:0000000000000000 layer_debug
/var/folders/mf/5466dhw562q7lyk542tgnwkc0000gn/T//ccR8euRB.s:816    .text.update_source_layers_cache:0000000000000000 update_source_layers_cache
/var/folders/mf/5466dhw562q7lyk542tgnwkc0000gn/T//ccR8euRB.s:1299   .bss.source_layers_cache:0000000000000000 source_layers_cache
/var/folders/mf/5466dhw562q7lyk542tgnwkc0000gn/T//ccR8euRB.s:921    .text.read_source_layers_cache:0000000000000000 read_source_layers_cache
/var/folders/mf/5466dhw562q7lyk542tgnwkc0000gn/T//ccR8euRB.s:1016   .text.layer_switch_get_layer:0000000000000000 layer_switch_get_layer
/var/folders/mf/5466dhw562q7lyk542tgnwkc0000gn/T//ccR8euRB.s:1165   .text.layer_switch_get_action:0000000000000000 layer_switch_get_action
/var/folders/mf/5466dhw562q7lyk542tgnwkc0000gn/T//ccR8euRB.s:1204   .text.store_or_get_action:0000000000000000 store_or_get_action

UNDEFINED SYMBOLS
clear_keyboard_but_mods
action_for_key
disable_action_cache
__do_clear_bss
