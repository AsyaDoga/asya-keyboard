   1               		.file	"bootmagic.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.scan_keycode,"ax",@progbits
  12               	scan_keycode:
  13               	.LVL0:
  14               	.LFB104:
  15               		.file 1 "./tmk_core/common/bootmagic.c"
   1:./tmk_core/common/bootmagic.c **** #include <stdint.h>
   2:./tmk_core/common/bootmagic.c **** #include <stdbool.h>
   3:./tmk_core/common/bootmagic.c **** #include "wait.h"
   4:./tmk_core/common/bootmagic.c **** #include "matrix.h"
   5:./tmk_core/common/bootmagic.c **** #include "bootloader.h"
   6:./tmk_core/common/bootmagic.c **** #include "debug.h"
   7:./tmk_core/common/bootmagic.c **** #include "keymap.h"
   8:./tmk_core/common/bootmagic.c **** #include "host.h"
   9:./tmk_core/common/bootmagic.c **** #include "action_layer.h"
  10:./tmk_core/common/bootmagic.c **** #include "eeconfig.h"
  11:./tmk_core/common/bootmagic.c **** #include "bootmagic.h"
  12:./tmk_core/common/bootmagic.c **** 
  13:./tmk_core/common/bootmagic.c **** keymap_config_t keymap_config;
  14:./tmk_core/common/bootmagic.c **** 
  15:./tmk_core/common/bootmagic.c **** void bootmagic(void)
  16:./tmk_core/common/bootmagic.c **** {
  17:./tmk_core/common/bootmagic.c ****     /* check signature */
  18:./tmk_core/common/bootmagic.c ****     if (!eeconfig_is_enabled()) {
  19:./tmk_core/common/bootmagic.c ****         eeconfig_init();
  20:./tmk_core/common/bootmagic.c ****     }
  21:./tmk_core/common/bootmagic.c **** 
  22:./tmk_core/common/bootmagic.c ****     /* do scans in case of bounce */
  23:./tmk_core/common/bootmagic.c ****     print("bootmagic scan: ... ");
  24:./tmk_core/common/bootmagic.c ****     uint8_t scan = 100;
  25:./tmk_core/common/bootmagic.c ****     while (scan--) { matrix_scan(); wait_ms(10); }
  26:./tmk_core/common/bootmagic.c ****     print("done.\n");
  27:./tmk_core/common/bootmagic.c **** 
  28:./tmk_core/common/bootmagic.c ****     /* bootmagic skip */
  29:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SKIP)) {
  30:./tmk_core/common/bootmagic.c ****         return;
  31:./tmk_core/common/bootmagic.c ****     }
  32:./tmk_core/common/bootmagic.c **** 
  33:./tmk_core/common/bootmagic.c ****     /* eeconfig clear */
  34:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_EEPROM_CLEAR)) {
  35:./tmk_core/common/bootmagic.c ****         eeconfig_init();
  36:./tmk_core/common/bootmagic.c ****     }
  37:./tmk_core/common/bootmagic.c **** 
  38:./tmk_core/common/bootmagic.c ****     /* bootloader */
  39:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_BOOTLOADER)) {
  40:./tmk_core/common/bootmagic.c ****         bootloader_jump();
  41:./tmk_core/common/bootmagic.c ****     }
  42:./tmk_core/common/bootmagic.c **** 
  43:./tmk_core/common/bootmagic.c ****     /* debug enable */
  44:./tmk_core/common/bootmagic.c ****     debug_config.raw = eeconfig_read_debug();
  45:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_ENABLE)) {
  46:./tmk_core/common/bootmagic.c ****         if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MATRIX)) {
  47:./tmk_core/common/bootmagic.c ****             debug_config.matrix = !debug_config.matrix;
  48:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_KEYBOARD)) {
  49:./tmk_core/common/bootmagic.c ****             debug_config.keyboard = !debug_config.keyboard;
  50:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MOUSE)) {
  51:./tmk_core/common/bootmagic.c ****             debug_config.mouse = !debug_config.mouse;
  52:./tmk_core/common/bootmagic.c ****         } else {
  53:./tmk_core/common/bootmagic.c ****             debug_config.enable = !debug_config.enable;
  54:./tmk_core/common/bootmagic.c ****         }
  55:./tmk_core/common/bootmagic.c ****     }
  56:./tmk_core/common/bootmagic.c ****     eeconfig_update_debug(debug_config.raw);
  57:./tmk_core/common/bootmagic.c **** 
  58:./tmk_core/common/bootmagic.c ****     /* keymap config */
  59:./tmk_core/common/bootmagic.c ****     keymap_config.raw = eeconfig_read_keymap();
  60:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_CONTROL_CAPSLOCK)) {
  61:./tmk_core/common/bootmagic.c ****         keymap_config.swap_control_capslock = !keymap_config.swap_control_capslock;
  62:./tmk_core/common/bootmagic.c ****     }
  63:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_CAPSLOCK_TO_CONTROL)) {
  64:./tmk_core/common/bootmagic.c ****         keymap_config.capslock_to_control = !keymap_config.capslock_to_control;
  65:./tmk_core/common/bootmagic.c ****     }
  66:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_LALT_LGUI)) {
  67:./tmk_core/common/bootmagic.c ****         keymap_config.swap_lalt_lgui = !keymap_config.swap_lalt_lgui;
  68:./tmk_core/common/bootmagic.c ****     }
  69:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_RALT_RGUI)) {
  70:./tmk_core/common/bootmagic.c ****         keymap_config.swap_ralt_rgui = !keymap_config.swap_ralt_rgui;
  71:./tmk_core/common/bootmagic.c ****     }
  72:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_NO_GUI)) {
  73:./tmk_core/common/bootmagic.c ****         keymap_config.no_gui = !keymap_config.no_gui;
  74:./tmk_core/common/bootmagic.c ****     }
  75:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_GRAVE_ESC)) {
  76:./tmk_core/common/bootmagic.c ****         keymap_config.swap_grave_esc = !keymap_config.swap_grave_esc;
  77:./tmk_core/common/bootmagic.c ****     }
  78:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_BACKSLASH_BACKSPACE)) {
  79:./tmk_core/common/bootmagic.c ****         keymap_config.swap_backslash_backspace = !keymap_config.swap_backslash_backspace;
  80:./tmk_core/common/bootmagic.c ****     }
  81:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_HOST_NKRO)) {
  82:./tmk_core/common/bootmagic.c ****         keymap_config.nkro = !keymap_config.nkro;
  83:./tmk_core/common/bootmagic.c ****     }
  84:./tmk_core/common/bootmagic.c ****     eeconfig_update_keymap(keymap_config.raw);
  85:./tmk_core/common/bootmagic.c **** 
  86:./tmk_core/common/bootmagic.c ****     /* default layer */
  87:./tmk_core/common/bootmagic.c ****     uint8_t default_layer = 0;
  88:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_0)) { default_layer |= (1<<0); }
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
  90:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
  91:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
  92:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
  93:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
  94:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
  95:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
  96:./tmk_core/common/bootmagic.c ****     if (default_layer) {
  97:./tmk_core/common/bootmagic.c ****         eeconfig_update_default_layer(default_layer);
  98:./tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
  99:./tmk_core/common/bootmagic.c ****     } else {
 100:./tmk_core/common/bootmagic.c ****         default_layer = eeconfig_read_default_layer();
 101:./tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
 102:./tmk_core/common/bootmagic.c ****     }
 103:./tmk_core/common/bootmagic.c **** }
 104:./tmk_core/common/bootmagic.c **** 
 105:./tmk_core/common/bootmagic.c **** static bool scan_keycode(uint8_t keycode)
 106:./tmk_core/common/bootmagic.c **** {
  16               		.loc 1 106 1 view -0
  17               		.cfi_startproc
  18               		.loc 1 106 1 is_stmt 0 view .LVU1
  19 0000 AF92      		push r10
  20               	.LCFI0:
  21               		.cfi_def_cfa_offset 3
  22               		.cfi_offset 10, -2
  23 0002 BF92      		push r11
  24               	.LCFI1:
  25               		.cfi_def_cfa_offset 4
  26               		.cfi_offset 11, -3
  27 0004 CF92      		push r12
  28               	.LCFI2:
  29               		.cfi_def_cfa_offset 5
  30               		.cfi_offset 12, -4
  31 0006 DF92      		push r13
  32               	.LCFI3:
  33               		.cfi_def_cfa_offset 6
  34               		.cfi_offset 13, -5
  35 0008 EF92      		push r14
  36               	.LCFI4:
  37               		.cfi_def_cfa_offset 7
  38               		.cfi_offset 14, -6
  39 000a FF92      		push r15
  40               	.LCFI5:
  41               		.cfi_def_cfa_offset 8
  42               		.cfi_offset 15, -7
  43 000c 0F93      		push r16
  44               	.LCFI6:
  45               		.cfi_def_cfa_offset 9
  46               		.cfi_offset 16, -8
  47 000e 1F93      		push r17
  48               	.LCFI7:
  49               		.cfi_def_cfa_offset 10
  50               		.cfi_offset 17, -9
  51 0010 CF93      		push r28
  52               	.LCFI8:
  53               		.cfi_def_cfa_offset 11
  54               		.cfi_offset 28, -10
  55               	/* prologue: function */
  56               	/* frame size = 0 */
  57               	/* stack size = 9 */
  58               	.L__stack_usage = 9
 107:./tmk_core/common/bootmagic.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
  59               		.loc 1 107 5 is_stmt 1 view .LVU2
  60               	.LBB4:
  61               		.loc 1 107 10 view .LVU3
  62               	.LVL1:
  63               		.loc 1 107 25 view .LVU4
  64               		.loc 1 107 18 is_stmt 0 view .LVU5
  65 0012 C0E0      		ldi r28,0
  66               	.LBB5:
  67               	.LBB6:
 108:./tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
 109:./tmk_core/common/bootmagic.c ****         for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 110:./tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
  68               		.loc 1 110 46 view .LVU6
  69 0014 CC24      		clr r12
  70 0016 C394      		inc r12
  71 0018 D12C      		mov r13,__zero_reg__
 111:./tmk_core/common/bootmagic.c ****                 if (keycode == keymap_key_to_keycode(0, (keypos_t){ .row = r, .col = c })) {
  72               		.loc 1 111 29 view .LVU7
  73 001a E82E      		mov r14,r24
  74 001c F12C      		mov r15,__zero_reg__
  75               	.LVL2:
  76               	.L7:
  77               		.loc 1 111 29 view .LVU8
  78               	.LBE6:
 108:./tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
  79               		.loc 1 108 9 is_stmt 1 view .LVU9
 108:./tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
  80               		.loc 1 108 35 is_stmt 0 view .LVU10
  81 001e 8C2F      		mov r24,r28
  82 0020 0E94 0000 		call matrix_get_row
  83               	.LVL3:
  84 0024 5C01      		movw r10,r24
  85               	.LVL4:
 109:./tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
  86               		.loc 1 109 9 is_stmt 1 view .LVU11
  87               	.LBB7:
 109:./tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
  88               		.loc 1 109 14 view .LVU12
 109:./tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
  89               		.loc 1 109 29 view .LVU13
  90               	.LBE7:
 108:./tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
  91               		.loc 1 108 35 is_stmt 0 view .LVU14
  92 0026 10E0      		ldi r17,0
  93 0028 00E0      		ldi r16,0
  94               	.LVL5:
  95               	.L3:
  96               	.LBB8:
 110:./tmk_core/common/bootmagic.c ****                 if (keycode == keymap_key_to_keycode(0, (keypos_t){ .row = r, .col = c })) {
  97               		.loc 1 110 13 is_stmt 1 view .LVU15
 110:./tmk_core/common/bootmagic.c ****                 if (keycode == keymap_key_to_keycode(0, (keypos_t){ .row = r, .col = c })) {
  98               		.loc 1 110 46 is_stmt 0 view .LVU16
  99 002a C601      		movw r24,r12
 100 002c 002E      		mov r0,r16
 101 002e 00C0      		rjmp 2f
 102               		1:
 103 0030 880F      		lsl r24
 104 0032 991F      		rol r25
 105               		2:
 106 0034 0A94      		dec r0
 107 0036 02F4      		brpl 1b
 110:./tmk_core/common/bootmagic.c ****                 if (keycode == keymap_key_to_keycode(0, (keypos_t){ .row = r, .col = c })) {
 108               		.loc 1 110 28 view .LVU17
 109 0038 8A21      		and r24,r10
 110 003a 9B21      		and r25,r11
 110:./tmk_core/common/bootmagic.c ****                 if (keycode == keymap_key_to_keycode(0, (keypos_t){ .row = r, .col = c })) {
 111               		.loc 1 110 16 view .LVU18
 112 003c 892B      		or r24,r25
 113 003e 01F4      		brne .L2
 114               	.L6:
 109:./tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
 115               		.loc 1 109 46 is_stmt 1 view .LVU19
 116               	.LVL6:
 109:./tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
 117               		.loc 1 109 29 view .LVU20
 118 0040 0F5F      		subi r16,-1
 119 0042 1F4F      		sbci r17,-1
 120               	.LVL7:
 109:./tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
 121               		.loc 1 109 9 is_stmt 0 view .LVU21
 122 0044 0D30      		cpi r16,13
 123 0046 1105      		cpc r17,__zero_reg__
 124 0048 01F4      		brne .L3
 125               	.LBE8:
 126               	.LBE5:
 107:./tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
 127               		.loc 1 107 42 is_stmt 1 discriminator 2 view .LVU22
 107:./tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
 128               		.loc 1 107 43 is_stmt 0 discriminator 2 view .LVU23
 129 004a CF5F      		subi r28,lo8(-(1))
 130               	.LVL8:
 107:./tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
 131               		.loc 1 107 25 is_stmt 1 discriminator 2 view .LVU24
 107:./tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
 132               		.loc 1 107 5 is_stmt 0 discriminator 2 view .LVU25
 133 004c C730      		cpi r28,lo8(7)
 134 004e 01F4      		brne .L7
 135               	.LBE4:
 112:./tmk_core/common/bootmagic.c ****                     return true;
 113:./tmk_core/common/bootmagic.c ****                 }
 114:./tmk_core/common/bootmagic.c ****             }
 115:./tmk_core/common/bootmagic.c ****         }
 116:./tmk_core/common/bootmagic.c ****     }
 117:./tmk_core/common/bootmagic.c ****     return false;
 136               		.loc 1 117 12 view .LVU26
 137 0050 80E0      		ldi r24,0
 138               	.LVL9:
 139               	.L1:
 140               	/* epilogue start */
 118:./tmk_core/common/bootmagic.c **** }
 141               		.loc 1 118 1 view .LVU27
 142 0052 CF91      		pop r28
 143               	.LVL10:
 144               		.loc 1 118 1 view .LVU28
 145 0054 1F91      		pop r17
 146 0056 0F91      		pop r16
 147 0058 FF90      		pop r15
 148 005a EF90      		pop r14
 149               	.LVL11:
 150               		.loc 1 118 1 view .LVU29
 151 005c DF90      		pop r13
 152 005e CF90      		pop r12
 153 0060 BF90      		pop r11
 154 0062 AF90      		pop r10
 155               	.LVL12:
 156               		.loc 1 118 1 view .LVU30
 157 0064 0895      		ret
 158               	.LVL13:
 159               	.L2:
 160               	.LBB11:
 161               	.LBB10:
 162               	.LBB9:
 111:./tmk_core/common/bootmagic.c ****                     return true;
 163               		.loc 1 111 17 is_stmt 1 view .LVU31
 111:./tmk_core/common/bootmagic.c ****                     return true;
 164               		.loc 1 111 32 is_stmt 0 view .LVU32
 165 0066 602F      		mov r22,r16
 166 0068 7C2F      		mov r23,r28
 167 006a 80E0      		ldi r24,0
 168 006c 0E94 0000 		call keymap_key_to_keycode
 169               	.LVL14:
 111:./tmk_core/common/bootmagic.c ****                     return true;
 170               		.loc 1 111 20 view .LVU33
 171 0070 E816      		cp r14,r24
 172 0072 F906      		cpc r15,r25
 173 0074 01F4      		brne .L6
 112:./tmk_core/common/bootmagic.c ****                     return true;
 174               		.loc 1 112 28 view .LVU34
 175 0076 81E0      		ldi r24,lo8(1)
 176 0078 00C0      		rjmp .L1
 177               	.LBE9:
 178               	.LBE10:
 179               	.LBE11:
 180               		.cfi_endproc
 181               	.LFE104:
 183               		.section	.text.bootmagic_scan_keycode,"ax",@progbits
 184               	.global	bootmagic_scan_keycode
 186               	bootmagic_scan_keycode:
 187               	.LVL15:
 188               	.LFB105:
 119:./tmk_core/common/bootmagic.c **** 
 120:./tmk_core/common/bootmagic.c **** bool bootmagic_scan_keycode(uint8_t keycode)
 121:./tmk_core/common/bootmagic.c **** {
 189               		.loc 1 121 1 is_stmt 1 view -0
 190               		.cfi_startproc
 191               		.loc 1 121 1 is_stmt 0 view .LVU36
 192 0000 CF93      		push r28
 193               	.LCFI9:
 194               		.cfi_def_cfa_offset 3
 195               		.cfi_offset 28, -2
 196               	/* prologue: function */
 197               	/* frame size = 0 */
 198               	/* stack size = 1 */
 199               	.L__stack_usage = 1
 200 0002 C82F      		mov r28,r24
 122:./tmk_core/common/bootmagic.c ****     if (!scan_keycode(BOOTMAGIC_KEY_SALT)) return false;
 201               		.loc 1 122 5 is_stmt 1 view .LVU37
 202               		.loc 1 122 10 is_stmt 0 view .LVU38
 203 0004 8CE2      		ldi r24,lo8(44)
 204               	.LVL16:
 205               		.loc 1 122 10 view .LVU39
 206 0006 0E94 0000 		call scan_keycode
 207               	.LVL17:
 208               		.loc 1 122 8 view .LVU40
 209 000a 8823      		tst r24
 210 000c 01F0      		breq .L12
 123:./tmk_core/common/bootmagic.c **** 
 124:./tmk_core/common/bootmagic.c ****     return scan_keycode(keycode);
 211               		.loc 1 124 5 is_stmt 1 view .LVU41
 212               		.loc 1 124 12 is_stmt 0 view .LVU42
 213 000e 8C2F      		mov r24,r28
 214               	/* epilogue start */
 125:./tmk_core/common/bootmagic.c **** }...
 215               		.loc 1 125 1 view .LVU43
 216 0010 CF91      		pop r28
 217               	.LVL18:
 124:./tmk_core/common/bootmagic.c ****     return scan_keycode(keycode);
 218               		.loc 1 124 12 view .LVU44
 219 0012 0C94 0000 		jmp scan_keycode
 220               	.LVL19:
 221               	.L12:
 222               		.loc 1 125 1 view .LVU45
 223 0016 80E0      		ldi r24,0
 224               	/* epilogue start */
 225 0018 CF91      		pop r28
 226               	.LVL20:
 227               		.loc 1 125 1 view .LVU46
 228 001a 0895      		ret
 229               		.cfi_endproc
 230               	.LFE105:
 232               		.section	.text.bootmagic,"ax",@progbits
 233               	.global	bootmagic
 235               	bootmagic:
 236               	.LFB103:
  16:./tmk_core/common/bootmagic.c **** {
 237               		.loc 1 16 1 is_stmt 1 view -0
 238               		.cfi_startproc
 239 0000 CF93      		push r28
 240               	.LCFI10:
 241               		.cfi_def_cfa_offset 3
 242               		.cfi_offset 28, -2
 243               	/* prologue: function */
 244               	/* frame size = 0 */
 245               	/* stack size = 1 */
 246               	.L__stack_usage = 1
  18:./tmk_core/common/bootmagic.c ****     if (!eeconfig_is_enabled()) {
 247               		.loc 1 18 5 view .LVU48
  18:./tmk_core/common/bootmagic.c ****     if (!eeconfig_is_enabled()) {
 248               		.loc 1 18 10 is_stmt 0 view .LVU49
 249 0002 0E94 0000 		call eeconfig_is_enabled
 250               	.LVL21:
  18:./tmk_core/common/bootmagic.c ****     if (!eeconfig_is_enabled()) {
 251               		.loc 1 18 8 view .LVU50
 252 0006 8111      		cpse r24,__zero_reg__
 253 0008 00C0      		rjmp .L15
  19:./tmk_core/common/bootmagic.c ****         eeconfig_init();
 254               		.loc 1 19 9 is_stmt 1 view .LVU51
 255 000a 0E94 0000 		call eeconfig_init
 256               	.LVL22:
 257               	.L15:
  16:./tmk_core/common/bootmagic.c **** {
 258               		.loc 1 16 1 is_stmt 0 discriminator 1 view .LVU52
 259 000e C5E6      		ldi r28,lo8(101)
 260 0010 00C0      		rjmp .L16
 261               	.LVL23:
 262               	.L17:
  25:./tmk_core/common/bootmagic.c ****     while (scan--) { matrix_scan(); wait_ms(10); }
 263               		.loc 1 25 22 is_stmt 1 discriminator 2 view .LVU53
 264 0012 0E94 0000 		call matrix_scan
 265               	.LVL24:
  25:./tmk_core/common/bootmagic.c ****     while (scan--) { matrix_scan(); wait_ms(10); }
 266               		.loc 1 25 37 discriminator 2 view .LVU54
 267               	.LBB12:
 268               	.LBI12:
 269               		.file 2 "/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h"
   1:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
   6:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
   9:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  12:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****      distribution.
  16:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  17:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  21:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  33:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  35:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  38:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #  endif
  42:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  44:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #include <math.h>
  47:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  48:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** /** \file */
  49:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     \code
  51:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     \endcode
  55:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  56:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     used.
  60:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  61:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  70:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  79:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  83:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** */
  84:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  85:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #endif
  89:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  90:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  97:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 103:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     integer value.
 107:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****  */
 108:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #endif
 110:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 111:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #endif
 114:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 115:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #endif
 120:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 121:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** /**
 122:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 124:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 126:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 129:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 131:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 137:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 142:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 147:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    respectively.
 151:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 152:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    \note
 153:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 154:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 164:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****  */
 165:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** void
 166:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** _delay_ms(double __ms)
 270               		.loc 2 166 1 discriminator 2 view .LVU55
 271               	.LBB13:
 167:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** {
 168:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	double __tmp ;
 272               		.loc 2 168 2 discriminator 2 view .LVU56
 169:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 273               		.loc 2 172 2 discriminator 2 view .LVU57
 173:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 274               		.loc 2 173 2 discriminator 2 view .LVU58
 174:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 275               		.loc 2 174 2 discriminator 2 view .LVU59
 175:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 176:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 179:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 182:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	#else
 183:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 		//round up by default
 184:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 276               		.loc 2 184 3 discriminator 2 view .LVU60
 185:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	#endif
 186:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 187:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 277               		.loc 2 187 2 discriminator 2 view .LVU61
 278 0016 8FE3      		ldi r24,lo8(-25537)
 279 0018 9CE9      		ldi r25,hi8(-25537)
 280 001a 0197      	1:	sbiw r24,1
 281 001c 01F4      		brne 1b
 282 001e 00C0      		rjmp .
 283 0020 0000      		nop
 284               	.LVL25:
 285               	.L16:
 286               		.loc 2 187 2 is_stmt 0 discriminator 2 view .LVU62
 287               	.LBE13:
 288               	.LBE12:
  25:./tmk_core/common/bootmagic.c ****     while (scan--) { matrix_scan(); wait_ms(10); }
 289               		.loc 1 25 11 is_stmt 1 discriminator 1 view .LVU63
  25:./tmk_core/common/bootmagic.c ****     while (scan--) { matrix_scan(); wait_ms(10); }
 290               		.loc 1 25 11 is_stmt 0 discriminator 1 view .LVU64
 291 0022 C150      		subi r28,lo8(-(-1))
 292               	.LVL26:
  25:./tmk_core/common/bootmagic.c ****     while (scan--) { matrix_scan(); wait_ms(10); }
 293               		.loc 1 25 11 discriminator 1 view .LVU65
 294 0024 01F4      		brne .L17
  26:./tmk_core/common/bootmagic.c ****     print("done.\n");
 295               		.loc 1 26 21 is_stmt 1 view .LVU66
  29:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SKIP)) {
 296               		.loc 1 29 5 view .LVU67
  29:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SKIP)) {
 297               		.loc 1 29 9 is_stmt 0 view .LVU68
 298 0026 89E2      		ldi r24,lo8(41)
 299 0028 0E94 0000 		call bootmagic_scan_keycode
 300               	.LVL27:
  29:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SKIP)) {
 301               		.loc 1 29 8 view .LVU69
 302 002c 8111      		cpse r24,__zero_reg__
 303 002e 00C0      		rjmp .L14
  34:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_EEPROM_CLEAR)) {
 304               		.loc 1 34 5 is_stmt 1 view .LVU70
  34:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_EEPROM_CLEAR)) {
 305               		.loc 1 34 9 is_stmt 0 view .LVU71
 306 0030 8AE2      		ldi r24,lo8(42)
 307 0032 0E94 0000 		call bootmagic_scan_keycode
 308               	.LVL28:
  34:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_EEPROM_CLEAR)) {
 309               		.loc 1 34 8 view .LVU72
 310 0036 8111      		cpse r24,__zero_reg__
  35:./tmk_core/common/bootmagic.c ****         eeconfig_init();
 311               		.loc 1 35 9 is_stmt 1 view .LVU73
 312 0038 0E94 0000 		call eeconfig_init
 313               	.LVL29:
 314               	.L19:
  39:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_BOOTLOADER)) {
 315               		.loc 1 39 5 view .LVU74
  39:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_BOOTLOADER)) {
 316               		.loc 1 39 9 is_stmt 0 view .LVU75
 317 003c 85E0      		ldi r24,lo8(5)
 318 003e 0E94 0000 		call bootmagic_scan_keycode
 319               	.LVL30:
  39:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_BOOTLOADER)) {
 320               		.loc 1 39 8 view .LVU76
 321 0042 8111      		cpse r24,__zero_reg__
  40:./tmk_core/common/bootmagic.c ****         bootloader_jump();
 322               		.loc 1 40 9 is_stmt 1 view .LVU77
 323 0044 0E94 0000 		call bootloader_jump
 324               	.LVL31:
 325               	.L20:
  44:./tmk_core/common/bootmagic.c ****     debug_config.raw = eeconfig_read_debug();
 326               		.loc 1 44 5 view .LVU78
  44:./tmk_core/common/bootmagic.c ****     debug_config.raw = eeconfig_read_debug();
 327               		.loc 1 44 24 is_stmt 0 view .LVU79
 328 0048 0E94 0000 		call eeconfig_read_debug
 329               	.LVL32:
  44:./tmk_core/common/bootmagic.c ****     debug_config.raw = eeconfig_read_debug();
 330               		.loc 1 44 22 view .LVU80
 331 004c 8093 0000 		sts debug_config,r24
  45:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_ENABLE)) {
 332               		.loc 1 45 5 is_stmt 1 view .LVU81
  45:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_ENABLE)) {
 333               		.loc 1 45 9 is_stmt 0 view .LVU82
 334 0050 87E0      		ldi r24,lo8(7)
 335 0052 0E94 0000 		call bootmagic_scan_keycode
 336               	.LVL33:
  45:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_ENABLE)) {
 337               		.loc 1 45 8 view .LVU83
 338 0056 8823      		tst r24
 339 0058 01F0      		breq .L21
  46:./tmk_core/common/bootmagic.c ****         if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MATRIX)) {
 340               		.loc 1 46 9 is_stmt 1 view .LVU84
  46:./tmk_core/common/bootmagic.c ****         if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MATRIX)) {
 341               		.loc 1 46 13 is_stmt 0 view .LVU85
 342 005a 8BE1      		ldi r24,lo8(27)
 343 005c 0E94 0000 		call bootmagic_scan_keycode
 344               	.LVL34:
  46:./tmk_core/common/bootmagic.c ****         if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MATRIX)) {
 345               		.loc 1 46 12 view .LVU86
 346 0060 8823      		tst r24
 347 0062 01F4      		brne .+2
 348 0064 00C0      		rjmp .L22
  47:./tmk_core/common/bootmagic.c ****             debug_config.matrix = !debug_config.matrix;
 349               		.loc 1 47 13 is_stmt 1 view .LVU87
  47:./tmk_core/common/bootmagic.c ****             debug_config.matrix = !debug_config.matrix;
 350               		.loc 1 47 48 is_stmt 0 view .LVU88
 351 0066 9091 0000 		lds r25,debug_config
  47:./tmk_core/common/bootmagic.c ****             debug_config.matrix = !debug_config.matrix;
 352               		.loc 1 47 33 view .LVU89
 353 006a 892F      		mov r24,r25
 354 006c 8D7F      		andi r24,~(1<<1)
 355 006e 91FF      		sbrs r25,1
 356 0070 8260      		ori r24,1<<1
 357               	.L93:
  53:./tmk_core/common/bootmagic.c ****             debug_config.enable = !debug_config.enable;
 358               		.loc 1 53 33 view .LVU90
 359 0072 8093 0000 		sts debug_config,r24
 360               	.L21:
  56:./tmk_core/common/bootmagic.c ****     eeconfig_update_debug(debug_config.raw);
 361               		.loc 1 56 5 is_stmt 1 view .LVU91
 362 0076 8091 0000 		lds r24,debug_config
 363 007a 0E94 0000 		call eeconfig_update_debug
 364               	.LVL35:
  59:./tmk_core/common/bootmagic.c ****     keymap_config.raw = eeconfig_read_keymap();
 365               		.loc 1 59 5 view .LVU92
  59:./tmk_core/common/bootmagic.c ****     keymap_config.raw = eeconfig_read_keymap();
 366               		.loc 1 59 25 is_stmt 0 view .LVU93
 367 007e 0E94 0000 		call eeconfig_read_keymap
 368               	.LVL36:
 369 0082 90E0      		ldi r25,0
 370 0084 9093 0000 		sts keymap_config+1,r25
 371 0088 8093 0000 		sts keymap_config,r24
  60:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_CONTROL_CAPSLOCK)) {
 372               		.loc 1 60 5 is_stmt 1 view .LVU94
  60:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_CONTROL_CAPSLOCK)) {
 373               		.loc 1 60 9 is_stmt 0 view .LVU95
 374 008c 80EE      		ldi r24,lo8(-32)
 375 008e 0E94 0000 		call bootmagic_scan_keycode
 376               	.LVL37:
  60:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_CONTROL_CAPSLOCK)) {
 377               		.loc 1 60 8 view .LVU96
 378 0092 8823      		tst r24
 379 0094 01F0      		breq .L25
  61:./tmk_core/common/bootmagic.c ****         keymap_config.swap_control_capslock = !keymap_config.swap_control_capslock;
 380               		.loc 1 61 9 is_stmt 1 view .LVU97
  61:./tmk_core/common/bootmagic.c ****         keymap_config.swap_control_capslock = !keymap_config.swap_control_capslock;
 381               		.loc 1 61 61 is_stmt 0 view .LVU98
 382 0096 9091 0000 		lds r25,keymap_config
  61:./tmk_core/common/bootmagic.c ****         keymap_config.swap_control_capslock = !keymap_config.swap_control_capslock;
 383               		.loc 1 61 45 view .LVU99
 384 009a 892F      		mov r24,r25
 385 009c 8E7F      		andi r24,~(1<<0)
 386 009e 90FF      		sbrs r25,0
 387 00a0 8160      		ori r24,1<<0
 388 00a2 8093 0000 		sts keymap_config,r24
 389               	.L25:
  63:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_CAPSLOCK_TO_CONTROL)) {
 390               		.loc 1 63 5 is_stmt 1 view .LVU100
  63:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_CAPSLOCK_TO_CONTROL)) {
 391               		.loc 1 63 9 is_stmt 0 view .LVU101
 392 00a6 89E3      		ldi r24,lo8(57)
 393 00a8 0E94 0000 		call bootmagic_scan_keycode
 394               	.LVL38:
  63:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_CAPSLOCK_TO_CONTROL)) {
 395               		.loc 1 63 8 view .LVU102
 396 00ac 8823      		tst r24
 397 00ae 01F0      		breq .L26
  64:./tmk_core/common/bootmagic.c ****         keymap_config.capslock_to_control = !keymap_config.capslock_to_control;
 398               		.loc 1 64 9 is_stmt 1 view .LVU103
  64:./tmk_core/common/bootmagic.c ****         keymap_config.capslock_to_control = !keymap_config.capslock_to_control;
 399               		.loc 1 64 59 is_stmt 0 view .LVU104
 400 00b0 9091 0000 		lds r25,keymap_config
  64:./tmk_core/common/bootmagic.c ****         keymap_config.capslock_to_control = !keymap_config.capslock_to_control;
 401               		.loc 1 64 43 view .LVU105
 402 00b4 892F      		mov r24,r25
 403 00b6 8D7F      		andi r24,~(1<<1)
 404 00b8 91FF      		sbrs r25,1
 405 00ba 8260      		ori r24,1<<1
 406 00bc 8093 0000 		sts keymap_config,r24
 407               	.L26:
  66:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_LALT_LGUI)) {
 408               		.loc 1 66 5 is_stmt 1 view .LVU106
  66:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_LALT_LGUI)) {
 409               		.loc 1 66 9 is_stmt 0 view .LVU107
 410 00c0 82EE      		ldi r24,lo8(-30)
 411 00c2 0E94 0000 		call bootmagic_scan_keycode
 412               	.LVL39:
  66:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_LALT_LGUI)) {
 413               		.loc 1 66 8 view .LVU108
 414 00c6 8823      		tst r24
 415 00c8 01F0      		breq .L27
  67:./tmk_core/common/bootmagic.c ****         keymap_config.swap_lalt_lgui = !keymap_config.swap_lalt_lgui;
 416               		.loc 1 67 9 is_stmt 1 view .LVU109
  67:./tmk_core/common/bootmagic.c ****         keymap_config.swap_lalt_lgui = !keymap_config.swap_lalt_lgui;
 417               		.loc 1 67 54 is_stmt 0 view .LVU110
 418 00ca 9091 0000 		lds r25,keymap_config
  67:./tmk_core/common/bootmagic.c ****         keymap_config.swap_lalt_lgui = !keymap_config.swap_lalt_lgui;
 419               		.loc 1 67 38 view .LVU111
 420 00ce 892F      		mov r24,r25
 421 00d0 8B7F      		andi r24,~(1<<2)
 422 00d2 92FF      		sbrs r25,2
 423 00d4 8460      		ori r24,1<<2
 424 00d6 8093 0000 		sts keymap_config,r24
 425               	.L27:
  69:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_RALT_RGUI)) {
 426               		.loc 1 69 5 is_stmt 1 view .LVU112
  69:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_RALT_RGUI)) {
 427               		.loc 1 69 9 is_stmt 0 view .LVU113
 428 00da 86EE      		ldi r24,lo8(-26)
 429 00dc 0E94 0000 		call bootmagic_scan_keycode
 430               	.LVL40:
  69:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_RALT_RGUI)) {
 431               		.loc 1 69 8 view .LVU114
 432 00e0 8823      		tst r24
 433 00e2 01F0      		breq .L28
  70:./tmk_core/common/bootmagic.c ****         keymap_config.swap_ralt_rgui = !keymap_config.swap_ralt_rgui;
 434               		.loc 1 70 9 is_stmt 1 view .LVU115
  70:./tmk_core/common/bootmagic.c ****         keymap_config.swap_ralt_rgui = !keymap_config.swap_ralt_rgui;
 435               		.loc 1 70 54 is_stmt 0 view .LVU116
 436 00e4 9091 0000 		lds r25,keymap_config
  70:./tmk_core/common/bootmagic.c ****         keymap_config.swap_ralt_rgui = !keymap_config.swap_ralt_rgui;
 437               		.loc 1 70 38 view .LVU117
 438 00e8 892F      		mov r24,r25
 439 00ea 877F      		andi r24,~(1<<3)
 440 00ec 93FF      		sbrs r25,3
 441 00ee 8860      		ori r24,1<<3
 442 00f0 8093 0000 		sts keymap_config,r24
 443               	.L28:
  72:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_NO_GUI)) {
 444               		.loc 1 72 5 is_stmt 1 view .LVU118
  72:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_NO_GUI)) {
 445               		.loc 1 72 9 is_stmt 0 view .LVU119
 446 00f4 83EE      		ldi r24,lo8(-29)
 447 00f6 0E94 0000 		call bootmagic_scan_keycode
 448               	.LVL41:
  72:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_NO_GUI)) {
 449               		.loc 1 72 8 view .LVU120
 450 00fa 8823      		tst r24
 451 00fc 01F0      		breq .L29
  73:./tmk_core/common/bootmagic.c ****         keymap_config.no_gui = !keymap_config.no_gui;
 452               		.loc 1 73 9 is_stmt 1 view .LVU121
  73:./tmk_core/common/bootmagic.c ****         keymap_config.no_gui = !keymap_config.no_gui;
 453               		.loc 1 73 46 is_stmt 0 view .LVU122
 454 00fe 9091 0000 		lds r25,keymap_config
  73:./tmk_core/common/bootmagic.c ****         keymap_config.no_gui = !keymap_config.no_gui;
 455               		.loc 1 73 30 view .LVU123
 456 0102 892F      		mov r24,r25
 457 0104 8F7E      		andi r24,~(1<<4)
 458 0106 94FF      		sbrs r25,4
 459 0108 8061      		ori r24,1<<4
 460 010a 8093 0000 		sts keymap_config,r24
 461               	.L29:
  75:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_GRAVE_ESC)) {
 462               		.loc 1 75 5 is_stmt 1 view .LVU124
  75:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_GRAVE_ESC)) {
 463               		.loc 1 75 9 is_stmt 0 view .LVU125
 464 010e 85E3      		ldi r24,lo8(53)
 465 0110 0E94 0000 		call bootmagic_scan_keycode
 466               	.LVL42:
  75:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_GRAVE_ESC)) {
 467               		.loc 1 75 8 view .LVU126
 468 0114 8823      		tst r24
 469 0116 01F0      		breq .L30
  76:./tmk_core/common/bootmagic.c ****         keymap_config.swap_grave_esc = !keymap_config.swap_grave_esc;
 470               		.loc 1 76 9 is_stmt 1 view .LVU127
  76:./tmk_core/common/bootmagic.c ****         keymap_config.swap_grave_esc = !keymap_config.swap_grave_esc;
 471               		.loc 1 76 54 is_stmt 0 view .LVU128
 472 0118 9091 0000 		lds r25,keymap_config
  76:./tmk_core/common/bootmagic.c ****         keymap_config.swap_grave_esc = !keymap_config.swap_grave_esc;
 473               		.loc 1 76 38 view .LVU129
 474 011c 892F      		mov r24,r25
 475 011e 8F7D      		andi r24,~(1<<5)
 476 0120 95FF      		sbrs r25,5
 477 0122 8062      		ori r24,1<<5
 478 0124 8093 0000 		sts keymap_config,r24
 479               	.L30:
  78:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_BACKSLASH_BACKSPACE)) {
 480               		.loc 1 78 5 is_stmt 1 view .LVU130
  78:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_BACKSLASH_BACKSPACE)) {
 481               		.loc 1 78 9 is_stmt 0 view .LVU131
 482 0128 81E3      		ldi r24,lo8(49)
 483 012a 0E94 0000 		call bootmagic_scan_keycode
 484               	.LVL43:
  78:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_BACKSLASH_BACKSPACE)) {
 485               		.loc 1 78 8 view .LVU132
 486 012e 8823      		tst r24
 487 0130 01F0      		breq .L31
  79:./tmk_core/common/bootmagic.c ****         keymap_config.swap_backslash_backspace = !keymap_config.swap_backslash_backspace;
 488               		.loc 1 79 9 is_stmt 1 view .LVU133
  79:./tmk_core/common/bootmagic.c ****         keymap_config.swap_backslash_backspace = !keymap_config.swap_backslash_backspace;
 489               		.loc 1 79 64 is_stmt 0 view .LVU134
 490 0132 9091 0000 		lds r25,keymap_config
  79:./tmk_core/common/bootmagic.c ****         keymap_config.swap_backslash_backspace = !keymap_config.swap_backslash_backspace;
 491               		.loc 1 79 48 view .LVU135
 492 0136 892F      		mov r24,r25
 493 0138 8F7B      		andi r24,~(1<<6)
 494 013a 96FF      		sbrs r25,6
 495 013c 8064      		ori r24,1<<6
 496 013e 8093 0000 		sts keymap_config,r24
 497               	.L31:
  81:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_HOST_NKRO)) {
 498               		.loc 1 81 5 is_stmt 1 view .LVU136
  81:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_HOST_NKRO)) {
 499               		.loc 1 81 9 is_stmt 0 view .LVU137
 500 0142 81E1      		ldi r24,lo8(17)
 501 0144 0E94 0000 		call bootmagic_scan_keycode
 502               	.LVL44:
  81:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_HOST_NKRO)) {
 503               		.loc 1 81 8 view .LVU138
 504 0148 8823      		tst r24
 505 014a 01F0      		breq .L32
  82:./tmk_core/common/bootmagic.c ****         keymap_config.nkro = !keymap_config.nkro;
 506               		.loc 1 82 9 is_stmt 1 view .LVU139
  82:./tmk_core/common/bootmagic.c ****         keymap_config.nkro = !keymap_config.nkro;
 507               		.loc 1 82 44 is_stmt 0 view .LVU140
 508 014c 9091 0000 		lds r25,keymap_config
  82:./tmk_core/common/bootmagic.c ****         keymap_config.nkro = !keymap_config.nkro;
 509               		.loc 1 82 28 view .LVU141
 510 0150 892F      		mov r24,r25
 511 0152 97FB      		bst r25,7
 512 0154 87F9      		bld r24,7
 513 0156 8058      		subi r24,0x80
 514 0158 8093 0000 		sts keymap_config,r24
 515               	.L32:
  84:./tmk_core/common/bootmagic.c ****     eeconfig_update_keymap(keymap_config.raw);
 516               		.loc 1 84 5 is_stmt 1 view .LVU142
 517 015c 8091 0000 		lds r24,keymap_config
 518 0160 0E94 0000 		call eeconfig_update_keymap
 519               	.LVL45:
  87:./tmk_core/common/bootmagic.c ****     uint8_t default_layer = 0;
 520               		.loc 1 87 5 view .LVU143
  88:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_0)) { default_layer |= (1<<0); }
 521               		.loc 1 88 5 view .LVU144
  88:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_0)) { default_layer |= (1<<0); }
 522               		.loc 1 88 9 is_stmt 0 view .LVU145
 523 0164 87E2      		ldi r24,lo8(39)
 524 0166 0E94 0000 		call bootmagic_scan_keycode
 525               	.LVL46:
 526 016a C82F      		mov r28,r24
 527               	.LVL47:
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 528               		.loc 1 89 5 is_stmt 1 view .LVU146
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 529               		.loc 1 89 9 is_stmt 0 view .LVU147
 530 016c 8EE1      		ldi r24,lo8(30)
 531               	.LVL48:
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 532               		.loc 1 89 9 view .LVU148
 533 016e 0E94 0000 		call bootmagic_scan_keycode
 534               	.LVL49:
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 535               		.loc 1 89 8 view .LVU149
 536 0172 8111      		cpse r24,__zero_reg__
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 537               		.loc 1 89 66 is_stmt 1 discriminator 1 view .LVU150
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 538               		.loc 1 89 80 is_stmt 0 discriminator 1 view .LVU151
 539 0174 C260      		ori r28,lo8(2)
 540               	.LVL50:
 541               	.L33:
  90:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
 542               		.loc 1 90 5 is_stmt 1 view .LVU152
  90:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
 543               		.loc 1 90 9 is_stmt 0 view .LVU153
 544 0176 8FE1      		ldi r24,lo8(31)
 545 0178 0E94 0000 		call bootmagic_scan_keycode
 546               	.LVL51:
  90:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
 547               		.loc 1 90 8 view .LVU154
 548 017c 8111      		cpse r24,__zero_reg__
  90:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
 549               		.loc 1 90 66 is_stmt 1 discriminator 1 view .LVU155
  90:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
 550               		.loc 1 90 80 is_stmt 0 discriminator 1 view .LVU156
 551 017e C460      		ori r28,lo8(4)
 552               	.LVL52:
 553               	.L34:
  91:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
 554               		.loc 1 91 5 is_stmt 1 view .LVU157
  91:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
 555               		.loc 1 91 9 is_stmt 0 view .LVU158
 556 0180 80E2      		ldi r24,lo8(32)
 557 0182 0E94 0000 		call bootmagic_scan_keycode
 558               	.LVL53:
  91:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
 559               		.loc 1 91 8 view .LVU159
 560 0186 8111      		cpse r24,__zero_reg__
  91:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
 561               		.loc 1 91 66 is_stmt 1 discriminator 1 view .LVU160
  91:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
 562               		.loc 1 91 80 is_stmt 0 discriminator 1 view .LVU161
 563 0188 C860      		ori r28,lo8(8)
 564               	.LVL54:
 565               	.L35:
  92:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
 566               		.loc 1 92 5 is_stmt 1 view .LVU162
  92:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
 567               		.loc 1 92 9 is_stmt 0 view .LVU163
 568 018a 81E2      		ldi r24,lo8(33)
 569 018c 0E94 0000 		call bootmagic_scan_keycode
 570               	.LVL55:
  92:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
 571               		.loc 1 92 8 view .LVU164
 572 0190 8111      		cpse r24,__zero_reg__
  92:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
 573               		.loc 1 92 66 is_stmt 1 discriminator 1 view .LVU165
  92:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
 574               		.loc 1 92 80 is_stmt 0 discriminator 1 view .LVU166
 575 0192 C061      		ori r28,lo8(16)
 576               	.LVL56:
 577               	.L36:
  93:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
 578               		.loc 1 93 5 is_stmt 1 view .LVU167
  93:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
 579               		.loc 1 93 9 is_stmt 0 view .LVU168
 580 0194 82E2      		ldi r24,lo8(34)
 581 0196 0E94 0000 		call bootmagic_scan_keycode
 582               	.LVL57:
  93:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
 583               		.loc 1 93 8 view .LVU169
 584 019a 8111      		cpse r24,__zero_reg__
  93:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
 585               		.loc 1 93 66 is_stmt 1 discriminator 1 view .LVU170
  93:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
 586               		.loc 1 93 80 is_stmt 0 discriminator 1 view .LVU171
 587 019c C062      		ori r28,lo8(32)
 588               	.LVL58:
 589               	.L37:
  94:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
 590               		.loc 1 94 5 is_stmt 1 view .LVU172
  94:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
 591               		.loc 1 94 9 is_stmt 0 view .LVU173
 592 019e 83E2      		ldi r24,lo8(35)
 593 01a0 0E94 0000 		call bootmagic_scan_keycode
 594               	.LVL59:
  94:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
 595               		.loc 1 94 8 view .LVU174
 596 01a4 8111      		cpse r24,__zero_reg__
  94:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
 597               		.loc 1 94 66 is_stmt 1 discriminator 1 view .LVU175
  94:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
 598               		.loc 1 94 80 is_stmt 0 discriminator 1 view .LVU176
 599 01a6 C064      		ori r28,lo8(64)
 600               	.LVL60:
 601               	.L38:
  95:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
 602               		.loc 1 95 5 is_stmt 1 view .LVU177
  95:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
 603               		.loc 1 95 9 is_stmt 0 view .LVU178
 604 01a8 84E2      		ldi r24,lo8(36)
 605 01aa 0E94 0000 		call bootmagic_scan_keycode
 606               	.LVL61:
  95:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
 607               		.loc 1 95 8 view .LVU179
 608 01ae 8823      		tst r24
 609 01b0 01F0      		breq .L39
  95:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
 610               		.loc 1 95 66 is_stmt 1 discriminator 1 view .LVU180
  95:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
 611               		.loc 1 95 80 is_stmt 0 discriminator 1 view .LVU181
 612 01b2 C068      		ori r28,lo8(-128)
 613               	.LVL62:
  96:./tmk_core/common/bootmagic.c ****     if (default_layer) {
 614               		.loc 1 96 5 is_stmt 1 discriminator 1 view .LVU182
 615               	.L40:
  97:./tmk_core/common/bootmagic.c ****         eeconfig_update_default_layer(default_layer);
 616               		.loc 1 97 9 view .LVU183
 617 01b4 8C2F      		mov r24,r28
 618 01b6 0E94 0000 		call eeconfig_update_default_layer
 619               	.LVL63:
  98:./tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
 620               		.loc 1 98 9 view .LVU184
 621 01ba 6C2F      		mov r22,r28
 622               	.LVL64:
 623               	.L94:
 101:./tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
 624               		.loc 1 101 9 is_stmt 0 view .LVU185
 625 01bc 70E0      		ldi r23,0
 626 01be 90E0      		ldi r25,0
 627 01c0 80E0      		ldi r24,0
 628               	/* epilogue start */
 103:./tmk_core/common/bootmagic.c **** }
 629               		.loc 1 103 1 view .LVU186
 630 01c2 CF91      		pop r28
 101:./tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
 631               		.loc 1 101 9 view .LVU187
 632 01c4 0C94 0000 		jmp default_layer_set
 633               	.LVL65:
 634               	.L22:
  48:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_KEYBOARD)) {
 635               		.loc 1 48 16 is_stmt 1 view .LVU188
  48:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_KEYBOARD)) {
 636               		.loc 1 48 20 is_stmt 0 view .LVU189
 637 01c8 8EE0      		ldi r24,lo8(14)
 638 01ca 0E94 0000 		call bootmagic_scan_keycode
 639               	.LVL66:
  48:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_KEYBOARD)) {
 640               		.loc 1 48 19 view .LVU190
 641 01ce 8823      		tst r24
 642 01d0 01F0      		breq .L23
  49:./tmk_core/common/bootmagic.c ****             debug_config.keyboard = !debug_config.keyboard;
 643               		.loc 1 49 13 is_stmt 1 view .LVU191
  49:./tmk_core/common/bootmagic.c ****             debug_config.keyboard = !debug_config.keyboard;
 644               		.loc 1 49 50 is_stmt 0 view .LVU192
 645 01d2 9091 0000 		lds r25,debug_config
  49:./tmk_core/common/bootmagic.c ****             debug_config.keyboard = !debug_config.keyboard;
 646               		.loc 1 49 35 view .LVU193
 647 01d6 892F      		mov r24,r25
 648 01d8 8B7F      		andi r24,~(1<<2)
 649 01da 92FF      		sbrs r25,2
 650 01dc 8460      		ori r24,1<<2
 651 01de 00C0      		rjmp .L93
 652               	.L23:
  50:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MOUSE)) {
 653               		.loc 1 50 16 is_stmt 1 view .LVU194
  50:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MOUSE)) {
 654               		.loc 1 50 20 is_stmt 0 view .LVU195
 655 01e0 80E1      		ldi r24,lo8(16)
 656 01e2 0E94 0000 		call bootmagic_scan_keycode
 657               	.LVL67:
 658 01e6 9091 0000 		lds r25,debug_config
  50:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MOUSE)) {
 659               		.loc 1 50 19 view .LVU196
 660 01ea 8823      		tst r24
 661 01ec 01F0      		breq .L24
  51:./tmk_core/common/bootmagic.c ****             debug_config.mouse = !debug_config.mouse;
 662               		.loc 1 51 13 is_stmt 1 view .LVU197
  51:./tmk_core/common/bootmagic.c ****             debug_config.mouse = !debug_config.mouse;
 663               		.loc 1 51 32 is_stmt 0 view .LVU198
 664 01ee 892F      		mov r24,r25
 665 01f0 877F      		andi r24,~(1<<3)
 666 01f2 93FF      		sbrs r25,3
 667 01f4 8860      		ori r24,1<<3
 668 01f6 00C0      		rjmp .L93
 669               	.L24:
  53:./tmk_core/common/bootmagic.c ****             debug_config.enable = !debug_config.enable;
 670               		.loc 1 53 13 is_stmt 1 view .LVU199
  53:./tmk_core/common/bootmagic.c ****             debug_config.enable = !debug_config.enable;
 671               		.loc 1 53 33 is_stmt 0 view .LVU200
 672 01f8 892F      		mov r24,r25
 673 01fa 8E7F      		andi r24,~(1<<0)
 674 01fc 90FF      		sbrs r25,0
 675 01fe 8160      		ori r24,1<<0
 676 0200 00C0      		rjmp .L93
 677               	.LVL68:
 678               	.L39:
  96:./tmk_core/common/bootmagic.c ****     if (default_layer) {
 679               		.loc 1 96 5 is_stmt 1 view .LVU201
  96:./tmk_core/common/bootmagic.c ****     if (default_layer) {
 680               		.loc 1 96 8 is_stmt 0 view .LVU202
 681 0202 C111      		cpse r28,__zero_reg__
 682 0204 00C0      		rjmp .L40
 100:./tmk_core/common/bootmagic.c ****         default_layer = eeconfig_read_default_layer();
 683               		.loc 1 100 9 is_stmt 1 view .LVU203
 100:./tmk_core/common/bootmagic.c ****         default_layer = eeconfig_read_default_layer();
 684               		.loc 1 100 25 is_stmt 0 view .LVU204
 685 0206 0E94 0000 		call eeconfig_read_default_layer
 686               	.LVL69:
 101:./tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
 687               		.loc 1 101 9 is_stmt 1 view .LVU205
 688 020a 682F      		mov r22,r24
 689 020c 00C0      		rjmp .L94
 690               	.LVL70:
 691               	.L14:
 692               	/* epilogue start */
 103:./tmk_core/common/bootmagic.c **** }
 693               		.loc 1 103 1 is_stmt 0 view .LVU206
 694 020e CF91      		pop r28
 695               	.LVL71:
 103:./tmk_core/common/bootmagic.c **** }
 696               		.loc 1 103 1 view .LVU207
 697 0210 0895      		ret
 698               		.cfi_endproc
 699               	.LFE103:
 701               		.comm	keymap_config,2,1
 702               		.text
 703               	.Letext0:
 704               		.file 3 "/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/stdint.h"
 705               		.file 4 "./tmk_core/common/matrix.h"
 706               		.file 5 "./tmk_core/common/debug.h"
 707               		.file 6 "./tmk_core/common/keyboard.h"
 708               		.file 7 "./tmk_core/common/action.h"
 709               		.file 8 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 710               		.file 9 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 711               		.file 10 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
 712               		.file 11 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/HostStandardReq.h"
 713               		.file 12 "/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/stdio.h"
 714               		.file 13 "./tmk_core/common/host.h"
 715               		.file 14 "./quantum/keycode_config.h"
 716               		.file 15 "./quantum/keymap.h"
 717               		.file 16 "./tmk_core/common/action_layer.h"
 718               		.file 17 "./tmk_core/common/eeconfig.h"
 719               		.file 18 "./tmk_core/common/bootloader.h"
 720               		.file 19 "./tmk_core/common/keycode.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 bootmagic.c
/var/folders/mf/5466dhw562q7lyk542tgnwkc0000gn/T//ccIiYxnd.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/mf/5466dhw562q7lyk542tgnwkc0000gn/T//ccIiYxnd.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/mf/5466dhw562q7lyk542tgnwkc0000gn/T//ccIiYxnd.s:4      *ABS*:000000000000003f __SREG__
/var/folders/mf/5466dhw562q7lyk542tgnwkc0000gn/T//ccIiYxnd.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/mf/5466dhw562q7lyk542tgnwkc0000gn/T//ccIiYxnd.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/mf/5466dhw562q7lyk542tgnwkc0000gn/T//ccIiYxnd.s:12     .text.scan_keycode:0000000000000000 scan_keycode
/var/folders/mf/5466dhw562q7lyk542tgnwkc0000gn/T//ccIiYxnd.s:186    .text.bootmagic_scan_keycode:0000000000000000 bootmagic_scan_keycode
/var/folders/mf/5466dhw562q7lyk542tgnwkc0000gn/T//ccIiYxnd.s:235    .text.bootmagic:0000000000000000 bootmagic
                            *COM*:0000000000000002 keymap_config

UNDEFINED SYMBOLS
matrix_get_row
keymap_key_to_keycode
eeconfig_is_enabled
eeconfig_init
matrix_scan
bootloader_jump
eeconfig_read_debug
debug_config
eeconfig_update_debug
eeconfig_read_keymap
eeconfig_update_keymap
eeconfig_update_default_layer
default_layer_set
eeconfig_read_default_layer
__do_clear_bss
